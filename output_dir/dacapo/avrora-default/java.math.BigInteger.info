147
java/math/BigInteger.signInt()I
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 1
0 1 -1 
Functions: 0
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.divideAndRemainderBurnikelZiegler(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
PTG:
Vars:
11
$r2 1 8 
$r9 1 81 
r3 1 -1 
r7 2 52 36 
$r0 1 0 
_ret 1 81 
$r4 1 16 
r6 1 28 
r5 1 -2 
$r10 2 52 36 
$r11 2 75 64 
Fields: 0
Accesses: 3
71 1 -1 
43 1 -1 
47 1 -2 
Functions: 8
4 1 0 
21 2 16 -2 
70 1 28 
8 3 16 0 8 
57 1 28 
42 1 0 
13 2 -1 8 
29 1 0 
Constructors: 3
4 0
21 16
13 8

Summary: 5
0 -2 16 0 -1 
java/math/BigInteger.divideBurnikelZiegler(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
5
r0 1 -1 
_ret 1 6 
r1 1 -2 
$r3 1 6 
$r2 1 2 
Fields: 1
2 ArrayObject 6
Accesses: 0
Functions: 1
0 2 -1 -2 
Constructors: 0

Summary: 4
-2 2 -1 0 
java/math/BigInteger.getPrimeSearchLen(I)I
PTG:
Vars:
0
Fields: 0
Accesses: 0
Functions: 1
12 0 
Constructors: 0

Summary: 0

java/math/BigInteger.toByteArray()[B
PTG:
Vars:
3
_ret 1 11 
r1 1 11 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 2
0 1 -1 
37 1 -1 
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.flipBit(I)Ljava/math/BigInteger;
PTG:
Vars:
4
$r2 1 81 
_ret 1 81 
r0 1 -1 
r1 1 29 
Fields: 0
Accesses: 0
Functions: 5
80 1 29 
50 1 -1 
19 1 -1 
25 0 
11 0 
Constructors: 0

Summary: 2
29 -1 
java/math/BigInteger.<init>(ILjava/util/Random;)V
PTG:
Vars:
3
$r2 1 4 
r0 1 -1 
r1 1 -3 
Fields: 0
Accesses: 0
Functions: 2
3 1 -3 
7 2 -1 4 
Constructors: 1
7 -1

Summary: 4
4 1 -1 -3 
java/math/BigInteger.negate()Ljava/math/BigInteger;
PTG:
Vars:
4
r1 1 -1 
$r0 1 0 
$r2 1 5 
_ret 1 0 
Fields: 1
-1 mag 5
Accesses: 2
4 1 -1 
8 1 -1 
Functions: 1
13 2 0 5 
Constructors: 1
13 0

Summary: 1
-1 
java/math/BigInteger.exactDivideBy3()Ljava/math/BigInteger;
PTG:
Vars:
7
$r1 1 1 
_ret 1 118 
r4 1 7 
r5 1 117 
$r3 1 1 
r0 1 -1 
$r2 1 118 
Fields: 1
-1 mag 1
Accesses: 3
0 1 -1 
23 1 -1 
123 1 -1 
Functions: 2
113 1 7 
127 2 117 118 
Constructors: 1
127 118

Summary: 2
-1 7 
java/math/BigInteger.toString(Ljava/math/BigInteger;Ljava/lang/StringBuilder;II)V
PTG:
Vars:
8
r0 1 -2 
$r2 1 80 
r4 1 115 
r3 1 107 
$r1 1 1 
r5 1 -3 
$r7 1 139 
$r6 1 126 
Fields: 3
-2 mag 1
115 ArrayObject 126
115 ArrayObject 139
Accesses: 1
0 1 -2 
Functions: 13
33 0 
67 2 -2 1 
133 2 -3 126 
102 0 
10 2 -2 1 
109 3 -2 1 107 
144 2 -3 139 
17 0 
49 1 -3 
85 0 
26 1 -3 
62 1 -3 
94 0 
Constructors: 0

Summary: 2
1 0 
java/math/BigInteger.shiftLeft([II)[I
PTG:
Vars:
3
r1 3 24 69 90 
r0 1 -2 
_ret 3 24 69 90 
Fields: 0
Accesses: 0
Functions: 1
35 4 -2 69 24 90 
Constructors: 0

Summary: 1
0 
java/math/BigInteger.oddModPow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
38
r34 1 346 
_ret 1 781 
$r21 1 370 
r15 1 263 
r32 1 296 
r0 1 -2 
r8 1 138 
$r16 1 270 
$r19 1 781 
r29 1 62 
r43 1 770 
r40 1 721 
$r30 1 115 
r42 1 742 
r44 1 779 
$r9 1 218 
$r13 1 238 
$r23 1 289 
r37 1 677 
r28 2 44 62 
$r18 1 326 
$r26 1 159 
$r22 1 378 
r33 4 644 721 677 337 
r5 1 27 
$r3 1 24 
$r20 1 644 
$r1 1 1 
r31 5 644 721 216 677 337 
$r17 1 277 
r2 1 -1 
$r11 1 227 
r7 1 -3 
r35 2 513 625 
$r24 1 312 
$r25 1 303 
r6 1 38 
$r4 1 27 
Fields: 11
138 ArrayObject 513
138 ArrayObject 326
138 ArrayObject 625
138 ArrayObject 303
138 ArrayObject 370
138 ArrayObject 277
138 ArrayObject 289
138 ArrayObject 312
-2 mag 38
-1 mag 24
-3 mag 44
Accesses: 4
34 1 -2 
23 1 -1 
40 1 -3 
12 1 -1 
Functions: 23
0 3 -2 1 38 
672 9 721 337 513 625 644 677 216 44 62 
642 2 513 625 
198 0 
774 1 770 
233 6 721 337 227 644 677 216 
74 2 44 62 
268 1 263 
716 7 721 337 644 677 216 44 62 
333 3 326 44 62 
755 5 721 337 644 677 742 
212 1 27 
244 3 44 238 62 
788 2 779 781 
341 4 721 337 644 677 
24 1 24 
377 4 370 346 44 62 
314 2 296 303 
91 1 38 
251 1 238 
222 1 218 
254 3 227 218 238 
766 3 742 44 62 
Constructors: 4
244 238
788 781
233 227
222 218

Summary: 30
770 -2 263 677 779 -3 312 238 0 742 513 1 138 346 326 303 277 625 644 216 289 337 218 44 27 721 370 38 227 62 
java/math/BigInteger.signBit()I
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 1
0 1 -1 
Functions: 0
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.multiplyToomCook3(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
48
r6 1 73 
$r29 1 337 
r45 1 297 
r22 1 236 
_ret 1 370 
$r1 1 1 
r47 1 319 
r2 1 -3 
r39 1 169 
r44 1 283 
$r20 1 219 
$r28 1 332 
$r30 1 342 
r9 1 112 
$r11 1 146 
r40 1 178 
r0 1 -2 
$r16 1 198 
$r27 1 304 
r21 1 226 
r41 1 248 
r5 1 60 
r7 1 86 
r35 1 370 
$r3 1 7 
$r19 1 214 
r43 1 270 
r42 1 261 
r37 1 131 
$r34 1 362 
r10 1 122 
$r12 1 153 
r14 1 188 
r46 1 310 
$r33 1 357 
r13 1 160 
$r26 1 289 
$r18 1 210 
$r23 1 242 
$r31 1 347 
$r25 1 276 
$r32 1 352 
r4 1 47 
r38 1 140 
$r17 1 203 
$r24 1 254 
r8 1 99 
$r15 1 194 
Fields: 2
-2 mag 1
-3 mag 7
Accesses: 4
0 1 -2 
372 1 -2 
6 1 -3 
376 1 -3 
Functions: 45
194 1 194 
133 2 112 86 
198 2 198 73 
263 2 122 188 
328 1 236 
75 2 -3 7 
203 2 203 219 
332 2 310 332 
13 0 
142 2 131 60 
206 2 178 86 
272 2 248 270 
337 1 337 
146 2 146 153 
210 1 210 
276 1 276 
149 2 99 140 
214 2 112 214 
342 2 342 297 
88 2 -3 7 
347 1 347 
285 2 261 270 
352 2 352 319 
289 2 289 236 
162 2 131 60 
36 2 -2 1 
228 2 86 47 
101 2 -3 7 
357 1 357 
362 2 362 122 
171 2 99 140 
299 2 304 283 
301 1 236 
238 2 160 226 
49 2 -2 1 
114 2 112 73 
242 1 242 
180 2 178 169 
312 2 261 310 
250 2 160 188 
124 2 73 47 
62 2 -2 1 
190 2 169 47 
254 1 254 
383 1 370 
Constructors: 0

Summary: 2
1 0 
java/math/BigInteger.<init>(Ljava/lang/String;)V
PTG:
Vars:
2
r0 1 -1 
r1 1 -2 
Fields: 0
Accesses: 0
Functions: 1
4 2 -1 -2 
Constructors: 1
4 -1

Summary: 3
-2 -1 0 
java/math/BigInteger.and(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
5
r2 1 11 
_ret 1 53 
$r3 1 53 
r1 1 -2 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 6
0 1 -1 
34 1 -2 
4 1 -2 
52 1 11 
5 0 
24 1 -1 
Constructors: 0

Summary: 3
11 -2 -1 
java/math/BigInteger.multiply(J)Ljava/math/BigInteger;
PTG:
Vars:
7
r8 3 108 287 99 
r3 1 76 
$r7 2 108 99 
_ret 1 289 
r1 1 -1 
$r4 1 289 
$r2 1 76 
Fields: 1
-1 mag 76
Accesses: 5
82 1 -1 
6 1 -1 
40 1 -1 
75 1 -1 
47 1 -1 
Functions: 4
296 4 289 99 108 287 
25 2 -1 76 
26 0 
283 3 99 108 287 
Constructors: 1
296 289

Summary: 2
108 99 
java/math/BigInteger.compareMagnitude(Ljava/math/BigInteger;)I
PTG:
Vars:
4
r2 1 -2 
r1 1 4 
r0 1 -1 
r3 1 12 
Fields: 2
-2 mag 12
-1 mag 4
Accesses: 2
0 1 -1 
8 1 -2 
Functions: 0
Constructors: 0

Summary: 4
-2 12 -1 0 
java/math/BigInteger.isProbablePrime(I)Z
PTG:
Vars:
4
$r3 1 32 
r0 1 -1 
$r2 1 12 
r1 1 10 
Fields: 0
Accesses: 0
Functions: 5
6 1 -1 
23 1 10 
11 2 10 12 
43 1 10 
31 2 32 10 
Constructors: 0

Summary: 2
-1 10 
java/math/BigInteger.compareMagnitude(J)I
PTG:
Vars:
2
r0 1 -1 
r1 1 26 
Fields: 1
-1 mag 26
Accesses: 1
22 1 -1 
Functions: 1
18 0 
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.subtract([IJ)[I
PTG:
Vars:
3
r0 1 -2 
_ret 1 12 
r1 1 12 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 2
-2 0 
java/math/BigInteger.implSquareToLenChecks([II[II)V
PTG:
Vars:
2
r0 1 -2 
r1 1 -4 
Fields: 0
Accesses: 0
Functions: 31
65 0 
193 0 
131 0 
71 0 
135 0 
9 0 
140 0 
13 0 
144 0 
18 0 
22 0 
150 0 
87 0 
91 0 
28 0 
96 0 
164 0 
102 0 
168 0 
42 0 
107 0 
173 0 
46 0 
112 0 
177 0 
51 0 
118 0 
182 0 
55 0 
187 0 
60 0 
Constructors: 0

Summary: 4
-2 -4 0 2 
java/math/BigInteger.hashCode()I
PTG:
Vars:
3
$r1 1 6 
r0 1 -1 
$r2 1 6 
Fields: 1
-1 mag 6
Accesses: 3
18 1 -1 
5 1 -1 
39 1 -1 
Functions: 0
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.valueOf(J)Ljava/math/BigInteger;
PTG:
Vars:
2
_ret 1 53 
$r0 1 53 
Fields: 0
Accesses: 0
Functions: 1
58 1 53 
Constructors: 1
58 53

Summary: 0

java/math/BigInteger.multiplyKaratsuba(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
20
r0 1 -2 
r2 1 -3 
_ret 1 130 
$r10 1 77 
r6 1 45 
r7 1 53 
$r11 1 84 
$r3 1 7 
$r17 1 122 
r4 1 29 
r8 1 62 
r9 1 71 
$r1 1 1 
$r14 1 106 
r18 1 130 
$r15 1 111 
$r13 1 99 
r5 1 37 
$r16 1 114 
r12 1 90 
Fields: 2
-2 mag 1
-3 mag 7
Accesses: 4
0 1 -2 
132 1 -2 
6 1 -3 
136 1 -3 
Functions: 17
64 2 29 45 
99 2 99 111 
102 2 90 62 
39 2 -3 7 
73 2 37 29 
106 2 71 106 
13 0 
77 2 84 77 
47 2 -3 7 
143 1 130 
80 2 53 45 
114 1 114 
23 2 -2 1 
55 2 37 53 
122 2 71 122 
92 1 62 
31 2 -2 1 
Constructors: 0

Summary: 2
0 1 
java/math/BigInteger.min(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
4
_ret 2 -2 -1 
r1 1 -2 
$r2 2 -2 -1 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
0 2 -1 -2 
Constructors: 0

Summary: 0

java/math/BigInteger.passesLucasLehmer()Z
PTG:
Vars:
6
$r1 1 1 
r2 1 7 
$r4 1 49 
$r5 1 52 
r0 1 -1 
r3 1 46 
Fields: 0
Accesses: 0
Functions: 6
0 2 -1 1 
49 2 49 52 
23 0 
42 2 -1 7 
11 1 -1 
47 2 -1 46 
Constructors: 0

Summary: 4
49 7 46 -1 
java/math/BigInteger.floatValue()F
PTG:
Vars:
8
r0 1 -1 
$r2 1 10 
$r4 1 160 
$r1 1 10 
$r5 1 10 
$r7 1 10 
$r6 1 10 
$r3 1 10 
Fields: 1
-1 mag 10
Accesses: 9
0 1 -1 
49 1 -1 
113 1 -1 
18 1 -1 
99 1 -1 
211 1 -1 
9 1 -1 
89 1 -1 
122 1 -1 
Functions: 5
160 1 160 
37 2 -1 10 
23 0 
221 0 
159 2 -1 10 
Constructors: 0

Summary: 1
160 
java/math/BigInteger.stripLeadingZeroInts([I)[I
PTG:
Vars:
3
r0 1 -2 
_ret 1 25 
$r1 1 25 
Fields: 0
Accesses: 0
Functions: 1
24 1 -2 
Constructors: 0

Summary: 1
-2 
java/math/BigInteger.add(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
10
$r6 1 75 
$r13 2 78 92 
$r2 1 89 
r15 1 100 
_ret 1 101 
$r7 1 71 
r1 1 -1 
$r4 1 101 
r0 1 -2 
$r3 1 85 
Fields: 4
-2 mag 85
-2 mag 75
-1 mag 71
-1 mag 89
Accesses: 12
0 1 -2 
33 1 -1 
18 1 -2 
84 1 -2 
37 1 -2 
22 1 -1 
70 1 -1 
88 1 -1 
9 1 -1 
74 1 -2 
107 1 -1 
44 1 -1 
Functions: 7
48 0 
96 2 92 78 
52 6 -1 -2 85 71 89 75 
38 0 
119 2 100 101 
89 2 85 89 
75 2 71 75 
Constructors: 1
119 101

Summary: 1
0 
java/math/BigInteger.getToomSlice(IIII)Ljava/math/BigInteger;
PTG:
Vars:
7
r2 1 109 
$r4 1 127 
r0 1 -1 
$r1 1 1 
_ret 1 127 
$r5 1 133 
$r3 1 1 
Fields: 1
-1 mag 1
Accesses: 2
0 1 -1 
113 1 -1 
Functions: 4
131 1 109 
102 2 -1 1 
137 2 133 127 
124 2 1 109 
Constructors: 1
137 127

Summary: 0

java/math/BigInteger.or(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
5
$r3 1 53 
_ret 1 53 
r0 1 -1 
r2 1 11 
r1 1 -2 
Fields: 0
Accesses: 0
Functions: 6
0 1 -1 
34 1 -2 
4 1 -2 
52 1 11 
5 0 
24 1 -1 
Constructors: 0

Summary: 3
11 -2 -1 
java/math/BigInteger.multiplyToLen([II[II[I)[I
PTG:
Vars:
4
r1 1 -2 
r2 2 -6 27 
_ret 2 -6 27 
r0 1 -4 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 4
-2 -4 2 0 
java/math/BigInteger.subtract(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
10
$r7 1 74 
$r2 1 92 
$r3 1 88 
r16 1 103 
_ret 1 104 
$r6 1 78 
r0 1 -2 
r1 1 -1 
$r14 2 95 81 
$r4 1 104 
Fields: 4
-2 mag 78
-2 mag 88
-1 mag 92
-1 mag 74
Accesses: 12
0 1 -2 
36 1 -1 
21 1 -2 
87 1 -2 
40 1 -2 
9 1 -1 
25 1 -1 
73 1 -1 
91 1 -1 
77 1 -2 
110 1 -1 
47 1 -1 
Functions: 8
16 3 -2 88 78 
51 0 
99 2 81 95 
55 6 -1 -2 88 74 92 78 
41 0 
122 2 103 104 
92 2 88 92 
78 2 74 78 
Constructors: 1
122 104

Summary: 2
-2 0 
java/math/BigInteger.readObject(Ljava/io/ObjectInputStream;)V
PTG:
Vars:
7
r6 1 -1 
r0 1 -2 
r4 1 20 
$r3 1 20 
r11 1 76 
r1 1 4 
$r2 1 20 
Fields: 0
Accesses: 0
Functions: 12
0 1 -2 
67 0 
5 1 4 
133 1 -1 
166 0 
71 1 20 
151 1 -1 
106 1 4 
139 2 -1 76 
46 1 4 
15 1 4 
127 0 
Constructors: 0

Summary: 5
4 -2 20 76 -1 
java/math/BigInteger.squareToomCook3()Ljava/math/BigInteger;
PTG:
Vars:
37
r8 1 93 
r0 1 -1 
_ret 1 253 
r27 1 63 
r35 1 206 
$r12 1 116 
r29 1 135 
r13 1 123 
$r23 1 238 
$r11 1 111 
r32 1 170 
$r24 1 243 
$r16 1 163 
r4 1 46 
r30 1 148 
$r19 1 218 
r5 1 54 
r33 1 184 
$r22 1 233 
$r17 1 176 
$r25 1 248 
$r6 1 69 
$r21 1 228 
r28 1 85 
$r14 1 129 
$r18 1 191 
r34 1 197 
$r10 1 107 
$r1 1 1 
$r26 1 253 
$r20 1 223 
r7 1 76 
r3 1 36 
r2 1 26 
r31 1 157 
r9 1 101 
$r15 1 141 
Fields: 1
-1 mag 1
Accesses: 1
0 1 -1 
Functions: 34
65 2 36 63 
129 1 129 
69 1 69 
199 2 148 197 
137 2 76 93 
141 1 141 
78 2 36 63 
18 2 -1 1 
150 2 54 93 
214 1 101 
87 1 85 
218 2 197 218 
28 2 -1 1 
95 1 26 
159 2 135 157 
223 1 223 
163 1 163 
228 2 228 184 
38 2 -1 1 
103 2 85 26 
233 1 233 
107 1 107 
172 2 148 157 
238 2 238 206 
111 2 46 111 
48 1 46 
176 2 176 101 
243 1 243 
116 1 116 
56 2 26 46 
248 2 54 248 
186 2 170 191 
188 1 101 
125 2 123 76 
Constructors: 0

Summary: 0

java/math/BigInteger.add([I[I)[I
PTG:
Vars:
5
r2 2 -2 -3 
r0 1 20 
_ret 1 20 
r3 2 -2 -3 
r4 1 -2 
Fields: 0
Accesses: 0
Functions: 1
201 1 20 
Constructors: 0

Summary: 4
1 -2 -3 0 
java/math/BigInteger.not()Ljava/math/BigInteger;
PTG:
Vars:
4
$r2 1 37 
r0 1 -1 
_ret 1 37 
r1 1 4 
Fields: 0
Accesses: 0
Functions: 3
0 1 -1 
17 1 -1 
36 1 4 
Constructors: 0

Summary: 2
4 -1 
java/math/BigInteger.primeToCertainty(ILjava/util/Random;)Z
PTG:
Vars:
2
r0 1 -1 
r1 1 -3 
Fields: 0
Accesses: 0
Functions: 5
129 1 -1 
3 0 
120 2 -1 -3 
43 2 -1 -3 
14 1 -1 
Constructors: 0

Summary: 2
-1 -3 
java/math/BigInteger.intArrayCmpToLen([I[II)I
PTG:
Vars:
2
r0 1 -2 
r1 1 -3 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 2
-2 -3 
java/math/BigInteger.divideKnuth(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
9
$r6 1 20 
$r11 1 52 
$r0 1 0 
r3 1 -1 
_ret 1 52 
$r8 1 25 
$r4 1 13 
r7 1 -2 
$r2 1 8 
Fields: 2
-2 mag 25
-1 mag 13
Accesses: 4
24 1 -2 
43 1 -1 
12 1 -1 
47 1 -2 
Functions: 5
16 2 8 13 
4 1 0 
38 3 0 20 8 
42 1 0 
28 2 20 25 
Constructors: 3
16 8
4 0
28 20

Summary: 7
0 -2 -1 25 8 0 20 
java/math/BigInteger.toString()Ljava/lang/String;
PTG:
Vars:
3
$r1 1 3 
_ret 1 3 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
0 1 -1 
Constructors: 0

Summary: 0

java/math/BigInteger.intValueExact()I
PTG:
Vars:
3
r0 1 -1 
$r1 1 1 
$r2 1 23 
Fields: 1
-1 mag 1
Accesses: 1
0 1 -1 
Functions: 3
18 2 -1 1 
9 2 -1 1 
30 1 23 
Constructors: 1
30 23

Summary: 1
-1 
java/math/BigInteger.primitiveRightShift([III)V
PTG:
Vars:
1
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 1
-2 
java/math/BigInteger.divideAndRemainder(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
PTG:
Vars:
7
$r1 1 1 
$r5 1 1 
$r4 1 11 
$r6 1 34 
_ret 1 34 
r0 1 -2 
r2 1 -1 
Fields: 2
-2 mag 1
-1 mag 11
Accesses: 3
0 1 -2 
10 1 -1 
15 1 -2 
Functions: 2
32 4 -1 -2 1 11 
26 4 -1 -2 1 11 
Constructors: 0

Summary: 4
1 -2 -1 0 
java/math/BigInteger.<init>(I[I)V
PTG:
Vars:
5
$r4 1 33 
$r2 1 6 
$r5 1 33 
r1 1 -3 
r0 1 -1 
Fields: 1
-1 mag 33
Accesses: 5
32 1 -1 
64 1 -1 
67 1 -1 
9 1 -1 
42 1 -1 
Functions: 5
1 2 -1 33 
5 1 -3 
58 0 
28 0 
78 2 -1 33 
Constructors: 1
1 -1

Summary: 3
1 -1 -3 
java/math/BigInteger.squareKaratsuba()Ljava/math/BigInteger;
PTG:
Vars:
15
$r11 1 61 
$r6 1 40 
r2 1 15 
r3 1 21 
r5 1 32 
_ret 1 73 
r0 1 -1 
$r8 1 48 
$r9 1 55 
r4 1 26 
$r1 1 1 
$r12 1 68 
$r7 1 45 
$r10 1 58 
$r13 1 73 
Fields: 1
-1 mag 1
Accesses: 1
0 1 -1 
Functions: 12
16 2 -1 1 
48 2 48 55 
34 1 26 
51 2 32 26 
68 2 32 68 
22 1 21 
40 2 40 58 
10 2 -1 1 
43 2 21 15 
28 1 15 
45 1 45 
61 1 61 
Constructors: 0

Summary: 0

java/math/BigInteger.reportOverflow()V
PTG:
Vars:
1
$r0 1 0 
Fields: 0
Accesses: 0
Functions: 1
6 1 0 
Constructors: 1
6 0

Summary: 0

java/math/BigInteger.checkRange()V
PTG:
Vars:
4
r0 1 -1 
$r2 1 1 
$r3 1 1 
$r1 1 1 
Fields: 1
-1 mag 1
Accesses: 3
0 1 -1 
20 1 -1 
10 1 -1 
Functions: 1
29 0 
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.trustedStripLeadingZeroInts([I)[I
PTG:
Vars:
3
_ret 2 -2 33 
r0 1 -2 
$r1 2 -2 33 
Fields: 0
Accesses: 0
Functions: 1
32 1 -2 
Constructors: 0

Summary: 1
0 
java/math/BigInteger.getLower(I)Ljava/math/BigInteger;
PTG:
Vars:
7
r0 1 -1 
$r3 1 1 
r2 1 17 
_ret 1 33 
$r5 1 38 
$r4 1 33 
$r1 1 1 
Fields: 1
-1 mag 1
Accesses: 2
0 1 -1 
20 1 -1 
Functions: 4
37 1 17 
42 2 33 38 
11 2 -1 1 
30 2 1 17 
Constructors: 1
42 33

Summary: 0

java/math/BigInteger.xor(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
5
r1 1 -2 
r0 1 -1 
$r3 1 53 
_ret 1 53 
r2 1 11 
Fields: 0
Accesses: 0
Functions: 6
0 1 -1 
34 1 -2 
4 1 -2 
52 1 11 
5 0 
24 1 -1 
Constructors: 0

Summary: 3
11 -2 -1 
java/math/BigInteger.bitCount()I
PTG:
Vars:
6
$r5 1 18 
r0 1 -1 
$r1 1 18 
$r4 1 18 
$r2 1 18 
$r3 1 18 
Fields: 1
-1 mag 18
Accesses: 8
0 1 -1 
17 1 -1 
52 1 -1 
100 1 -1 
26 1 -1 
43 1 -1 
60 1 -1 
79 1 -1 
Functions: 2
84 0 
31 0 
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.randomBits(ILjava/util/Random;)[B
PTG:
Vars:
3
r0 1 27 
_ret 1 27 
r1 1 -3 
Fields: 0
Accesses: 0
Functions: 2
36 2 -3 27 
10 0 
Constructors: 0

Summary: 1
-3 
java/math/BigInteger.compareTo(Ljava/math/BigInteger;)I
PTG:
Vars:
2
r0 1 -1 
r1 1 -2 
Fields: 0
Accesses: 5
0 1 -1 
4 1 -2 
54 1 -1 
58 1 -2 
11 1 -1 
Functions: 2
40 2 -1 -2 
46 2 -1 -2 
Constructors: 0

Summary: 3
-2 -1 0 
java/math/BigInteger.multiply(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
4
$r2 1 3 
_ret 1 3 
r1 1 -2 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
0 2 -1 -2 
Constructors: 0

Summary: 2
-2 0 
java/math/BigInteger.shiftRight(I)Ljava/math/BigInteger;
PTG:
Vars:
5
r0 1 -1 
$r2 1 32 
_ret 1 27 
$r3 1 37 
$r1 1 27 
Fields: 1
-1 mag 32
Accesses: 3
0 1 -1 
40 1 -1 
31 1 -1 
Functions: 3
36 1 32 
44 2 37 27 
15 2 -1 32 
Constructors: 1
44 27

Summary: 0

java/math/BigInteger.montgomeryMultiply([I[I[IIJ[I)[I
PTG:
Vars:
7
r1 1 -3 
_ret 1 50 
r2 1 -4 
$r3 1 47 
r0 1 -2 
r6 1 -7 
$r4 1 50 
Fields: 0
Accesses: 0
Functions: 5
33 1 -4 
20 3 -2 -3 -7 
6 4 -2 -3 -4 -7 
46 1 -7 
47 4 -2 -3 -4 47 
Constructors: 0

Summary: 6
47 -2 -7 -4 25 -3 
java/math/BigInteger.divide(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
7
r2 1 -1 
$r4 1 11 
_ret 1 34 
r0 1 -2 
$r5 1 1 
$r6 1 34 
$r1 1 1 
Fields: 2
-2 mag 1
-1 mag 11
Accesses: 3
0 1 -2 
10 1 -1 
15 1 -2 
Functions: 2
32 4 -1 -2 1 11 
26 4 -1 -2 1 11 
Constructors: 0

Summary: 3
1 -2 -1 
java/math/BigInteger.<init>(Ljava/lang/String;I)V
PTG:
Vars:
12
$r9 1 332 
r20 1 343 
$r8 1 390 
r19 1 278 
$r12 1 260 
$r5 1 247 
r0 1 -1 
r1 1 -2 
$r3 1 199 
$r7 1 383 
r4 1 241 
$r6 1 313 
Fields: 1
-1 mag 390
Accesses: 5
193 1 -1 
386 1 -1 
180 1 -1 
389 1 -1 
170 1 -1 
Functions: 21
288 1 278 
1 2 -1 390 
225 0 
6 1 -2 
134 0 
329 1 -2 
267 1 -2 
44 0 
364 0 
144 1 -2 
400 2 -1 390 
51 1 -2 
116 0 
149 0 
309 0 
374 1 241 
88 0 
59 1 -2 
347 1 343 
29 0 
381 1 241 
Constructors: 1
1 -1

Summary: 3
0 241 -1 
java/math/BigInteger.magSerializedForm()[B
PTG:
Vars:
6
r3 1 38 
_ret 1 38 
$r2 1 1 
$r4 1 1 
r0 1 -1 
$r1 1 1 
Fields: 1
-1 mag 1
Accesses: 3
0 1 -1 
19 1 -1 
69 1 -1 
Functions: 1
24 0 
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.intValue()I
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
2 1 -1 
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.mod(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
5
r2 1 22 
$r4 2 36 22 
_ret 2 36 22 
r1 1 -1 
r0 1 -2 
Fields: 0
Accesses: 2
0 1 -2 
23 1 22 
Functions: 3
17 2 -1 -2 
34 2 -2 22 
13 0 
Constructors: 0

Summary: 2
-2 -1 
java/math/BigInteger.setBit(I)Ljava/math/BigInteger;
PTG:
Vars:
4
$r2 1 81 
_ret 1 81 
r0 1 -1 
r1 1 29 
Fields: 0
Accesses: 0
Functions: 5
80 1 29 
50 1 -1 
19 1 -1 
25 0 
11 0 
Constructors: 0

Summary: 2
29 -1 
java/math/BigInteger.subtract([I[I)[I
PTG:
Vars:
4
_ret 1 4 
r1 1 4 
r2 1 -3 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 4
1 -2 -3 0 
java/math/BigInteger.byteValueExact()B
PTG:
Vars:
3
$r2 1 40 
$r1 1 1 
r0 1 -1 
Fields: 1
-1 mag 1
Accesses: 1
0 1 -1 
Functions: 4
18 2 -1 1 
35 2 -1 1 
9 2 -1 1 
47 1 40 
Constructors: 1
47 40

Summary: 1
-1 
java/math/BigInteger.modPow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
38
$r2 1 45 
r7 1 215 
$r8 1 217 
$r34 1 341 
$r21 1 379 
$r26 1 416 
_ret 4 473 198 351 464 
r1 1 -1 
r0 1 -3 
$r3 1 75 
$r17 1 356 
$r30 1 458 
$r5 1 100 
$r35 1 344 
$r11 1 257 
$r45 2 174 -1 
$r20 1 373 
r9 1 225 
$r48 2 266 277 
$r4 1 96 
$r19 1 365 
r14 1 299 
$r33 1 336 
r6 2 174 -1 
$r32 1 329 
$r47 2 -1 246 
$r24 1 402 
r46 3 198 351 464 
r15 1 308 
r41 2 156 -2 
$r27 1 437 
r13 1 290 
$r22 1 393 
$r16 1 311 
$r29 1 448 
$r49 4 473 198 351 464 
$r31 1 324 
$r25 1 410 
Fields: 2
-3 mag 311
96 ArrayObject 100
Accesses: 7
0 1 -3 
17 2 -2 156 
227 1 -1 
84 2 -2 156 
310 1 -3 
135 2 -2 156 
157 1 -1 
Functions: 45
320 3 225 277 266 
385 2 379 299 
324 2 324 299 
453 3 448 -3 311 
390 3 356 379 365 
329 2 341 329 
74 2 -1 75 
458 1 458 
203 2 -3 311 
332 2 290 215 
13 0 
397 1 393 
272 5 -1 -2 246 215 156 
336 2 336 308 
209 2 -3 311 
406 2 290 215 
470 5 464 -3 198 311 351 
24 2 -3 311 
152 2 -2 156 
344 3 -3 311 344 
217 1 217 
282 4 -1 -2 156 174 
413 2 402 410 
95 2 -1 100 
164 3 -1 -3 311 
292 2 225 215 
422 2 416 308 
360 1 356 
234 2 -1 215 
107 2 -2 156 
427 3 416 402 393 
44 2 -1 45 
172 3 -1 -3 311 
301 2 225 215 
369 3 225 277 266 
434 2 356 393 
115 2 -3 311 
243 2 -1 215 
54 2 -3 311 
183 2 -3 311 
376 2 373 365 
441 1 437 
446 3 448 356 437 
191 6 -1 -2 -3 311 156 174 
255 2 257 215 
Constructors: 8
385 379
453 448
422 416
360 356
376 365
441 437
397 393
413 402

Summary: 26
344 324 437 402 373 -3 215 365 308 410 277 341 356 -2 393 448 290 299 156 225 329 379 416 458 311 336 
java/math/BigInteger.passesMillerRabin(ILjava/util/Random;)Z
PTG:
Vars:
11
r12 2 153 89 
r9 1 25 
$r10 1 44 
$r4 1 146 
$r1 1 1 
r2 1 7 
r7 2 34 -3 
$r11 1 60 
$r6 1 98 
$r5 1 123 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 13
0 2 -1 1 
96 3 98 153 89 
69 2 -1 44 
11 1 7 
107 3 7 153 89 
48 1 -1 
144 4 -1 146 153 89 
81 3 -1 25 44 
18 1 7 
53 3 34 -3 44 
121 3 153 89 123 
58 2 44 60 
31 0 
Constructors: 1
53 44

Summary: 9
34 44 89 25 -3 1 153 7 -1 
java/math/BigInteger.javaIncrement([I)[I
PTG:
Vars:
3
r1 2 -2 38 
_ret 2 -2 38 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 2
-1 0 
java/math/BigInteger.gcd(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
7
r0 1 -2 
r6 1 47 
_ret 1 52 
$r4 1 33 
$r7 1 52 
r1 1 -1 
$r2 1 24 
Fields: 0
Accesses: 2
0 1 -2 
12 1 -1 
Functions: 6
49 1 47 
19 1 -2 
38 2 33 -2 
7 1 -1 
42 2 33 24 
29 2 -1 24 
Constructors: 2
38 33
29 24

Summary: 5
47 -2 33 24 -1 
java/math/BigInteger.mod2(I)Ljava/math/BigInteger;
PTG:
Vars:
6
$r4 2 68 80 
r1 1 18 
$r3 1 22 
_ret 2 68 80 
r0 1 -1 
$r2 1 22 
Fields: 1
-1 mag 22
Accesses: 2
21 1 -1 
25 1 -1 
Functions: 4
0 2 -1 22 
35 2 18 22 
86 3 80 18 68 
74 3 80 18 68 
Constructors: 0

Summary: 1
18 
java/math/BigInteger.divideAndRemainderKnuth(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
PTG:
Vars:
12
r4 1 -1 
$r3 1 13 
$r1 1 5 
$r13 1 80 
$r5 1 18 
$r12 1 68 
_ret 1 1 
r8 1 -2 
$r9 1 31 
r11 1 47 
$r7 1 26 
r0 1 1 
Fields: 2
-2 mag 31
-1 mag 18
Accesses: 5
17 1 -1 
52 1 -1 
56 1 -2 
76 1 -1 
30 1 -2 
Functions: 6
34 2 26 31 
51 1 5 
21 2 18 13 
39 3 5 26 13 
9 1 5 
74 1 47 
Constructors: 3
34 26
21 13
9 5

Summary: 7
-2 26 13 0 5 -1 31 
java/math/BigInteger.clearBit(I)Ljava/math/BigInteger;
PTG:
Vars:
4
r1 1 33 
$r2 1 87 
_ret 1 87 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 5
19 1 -1 
54 1 -1 
86 1 33 
11 0 
29 0 
Constructors: 0

Summary: 2
33 -1 
java/math/BigInteger.montReduce([I[III)[I
PTG:
Vars:
3
_ret 1 -2 
r1 1 -3 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 5
80 2 -2 -3 
68 2 -2 -3 
40 1 -2 
90 2 -2 -3 
28 2 -2 -3 
Constructors: 0

Summary: 1
-3 
java/math/BigInteger.<init>([BI)V
PTG:
Vars:
4
$r3 1 27 
r1 1 -2 
r0 1 -1 
$r2 1 20 
Fields: 1
-1 mag 27
Accesses: 3
23 1 -1 
26 1 -1 
15 1 -1 
Functions: 3
1 2 -1 27 
19 1 -2 
37 2 -1 27 
Constructors: 1
1 -1

Summary: 2
-2 -1 
java/math/BigInteger.max(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
4
r1 1 -2 
_ret 2 -2 -1 
r0 1 -1 
$r2 2 -2 -1 
Fields: 0
Accesses: 0
Functions: 1
0 2 -1 -2 
Constructors: 0

Summary: 0

java/math/BigInteger.implMontgomerySquare([I[IIJ[I)[I
PTG:
Vars:
6
r1 1 -3 
_ret 1 15 
r3 1 -6 
r4 1 7 
$r2 1 15 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 2
2 2 -2 -6 
14 2 -3 7 
Constructors: 0

Summary: 4
-2 7 -6 -3 
java/math/BigInteger.implMulAdd([I[IIII)I
PTG:
Vars:
2
r0 1 -2 
r1 1 -3 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 4
1 -2 -3 0 
java/math/BigInteger.<init>([CII)V
PTG:
Vars:
10
$r1 1 79 
r0 1 -1 
$r6 1 201 
$r3 1 218 
$r7 1 142 
r2 1 -2 
$r4 1 225 
$r5 1 184 
r10 1 122 
$r11 1 128 
Fields: 1
-1 mag 225
Accesses: 5
224 1 -1 
49 1 -1 
39 1 -1 
61 1 -1 
221 1 -1 
Functions: 8
1 2 -1 225 
17 0 
209 1 122 
178 3 -1 225 -2 
216 1 122 
106 0 
235 2 -1 225 
156 3 -1 225 -2 
Constructors: 1
1 -1

Summary: 4
-2 0 -1 122 
java/math/BigInteger.<init>(I[B)V
PTG:
Vars:
5
$r4 1 33 
$r5 1 33 
r1 1 -3 
r0 1 -1 
$r2 1 6 
Fields: 1
-1 mag 33
Accesses: 5
32 1 -1 
64 1 -1 
67 1 -1 
9 1 -1 
42 1 -1 
Functions: 5
1 2 -1 33 
5 1 -3 
58 0 
28 0 
78 2 -1 33 
Constructors: 1
1 -1

Summary: 3
1 -1 -3 
java/math/BigInteger.getUpper(I)Ljava/math/BigInteger;
PTG:
Vars:
7
$r1 1 1 
_ret 1 36 
$r3 1 1 
$r4 1 36 
r0 1 -1 
r2 1 20 
$r5 1 42 
Fields: 1
-1 mag 1
Accesses: 2
0 1 -1 
24 1 -1 
Functions: 3
33 2 1 20 
40 1 20 
46 2 36 42 
Constructors: 1
46 36

Summary: 1
-1 
java/math/BigInteger.bitLength()I
PTG:
Vars:
5
$r4 1 16 
$r2 1 16 
r1 1 16 
$r3 1 16 
r0 1 -1 
Fields: 1
-1 mag 16
Accesses: 7
0 1 -1 
34 1 -1 
53 1 -1 
87 1 -1 
135 1 -1 
12 1 -1 
46 1 -1 
Functions: 2
39 0 
58 0 
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.getLowestSetBit()I
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 3
0 1 -1 
61 1 -1 
15 1 -1 
Functions: 2
50 0 
30 1 -1 
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.subtract(J[I)[I
PTG:
Vars:
3
_ret 1 34 
r2 1 34 
r0 1 -3 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 2
1 -3 
java/math/BigInteger.montgomerySquare([I[IIJ[I)[I
PTG:
Vars:
6
$r2 1 42 
r5 1 -6 
_ret 1 45 
r1 1 -3 
r0 1 -2 
$r3 1 45 
Fields: 0
Accesses: 0
Functions: 5
18 2 -2 -6 
6 3 -2 -3 -6 
41 1 -6 
42 3 -2 -3 42 
30 1 -3 
Constructors: 0

Summary: 5
42 -2 -6 23 -3 
java/math/BigInteger.compareTo(Ljava/lang/Object;)I
PTG:
Vars:
3
r1 1 -2 
r0 1 -1 
$r2 1 -2 
Fields: 0
Accesses: 0
Functions: 1
0 2 -1 -2 
Constructors: 0

Summary: 3
-2 -1 0 
java/math/BigInteger.lucasLehmerSequence(ILjava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
21
r14 2 80 63 
$r10 1 153 
r0 1 5 
r19 1 185 
_ret 3 40 143 9 
$r4 1 44 
r17 1 143 
r1 1 -3 
$r8 1 111 
r18 2 160 177 
r11 3 40 143 9 
r13 1 40 
r16 2 118 135 
r12 3 14 88 185 
r15 1 88 
$r5 1 50 
r3 1 -4 
$r7 1 56 
$r2 1 33 
$r9 1 150 
$r6 1 53 
Fields: 0
Accesses: 0
Functions: 24
1 0 
33 2 33 -4 
65 2 80 63 
129 3 -4 118 135 
98 1 -3 
162 2 160 177 
137 2 118 135 
42 3 88 185 14 
74 3 80 -4 63 
107 2 40 88 
171 3 160 177 -4 
44 2 53 44 
47 2 50 5 
111 2 -4 111 
16 1 -3 
48 3 40 9 143 
145 2 150 88 
82 2 80 63 
147 2 5 40 
179 2 160 177 
56 2 -4 56 
120 2 118 135 
153 2 -4 153 
29 6 40 88 9 185 14 143 
Constructors: 0

Summary: 20
80 111 150 50 33 -4 53 -3 44 118 88 153 63 5 56 160 185 177 135 143 
java/math/BigInteger.modPow2(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
PTG:
Vars:
7
r1 1 -2 
_ret 2 3 72 
$r2 1 85 
r4 2 3 72 
$r3 1 65 
r5 2 92 9 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 8
65 1 65 
83 2 9 92 
4 1 -1 
20 1 -1 
53 1 -2 
85 1 85 
14 1 -2 
62 4 3 72 9 92 
Constructors: 0

Summary: 4
-2 72 92 0 
java/math/BigInteger.testBit(I)Z
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 2
11 0 
15 1 -1 
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.multiplyByInt([III)Ljava/math/BigInteger;
PTG:
Vars:
4
r0 1 -2 
$r1 1 133 
_ret 1 133 
r4 2 120 31 
Fields: 0
Accesses: 0
Functions: 6
0 0 
116 2 120 31 
21 0 
140 3 133 120 31 
13 0 
14 1 -2 
Constructors: 1
140 133

Summary: 3
-2 31 0 
java/math/BigInteger.primitiveLeftShift([III)V
PTG:
Vars:
1
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 2
-2 0 
java/math/BigInteger.add(J)Ljava/math/BigInteger;
PTG:
Vars:
7
$r1 1 91 
r0 1 -1 
$r10 2 80 94 
$r4 1 73 
_ret 1 106 
r12 1 104 
$r2 1 106 
Fields: 2
-1 mag 73
-1 mag 91
Accesses: 7
113 1 -1 
35 1 -1 
8 1 -1 
24 1 -1 
72 1 -1 
90 1 -1 
46 1 -1 
Functions: 12
50 0 
99 2 80 94 
20 0 
54 3 -1 73 91 
86 0 
39 0 
40 0 
91 1 91 
76 0 
77 1 73 
125 2 104 106 
15 0 
Constructors: 1
125 106

Summary: 0

java/math/BigInteger.implMontgomeryMultiplyChecks([I[I[II[I)V
PTG:
Vars:
4
r2 1 -4 
r1 1 -3 
r3 1 -6 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 15
99 0 
103 0 
10 0 
42 0 
108 0 
14 0 
46 0 
112 0 
19 0 
51 0 
118 0 
23 0 
55 0 
29 0 
61 0 
Constructors: 0

Summary: 16
19 42 -2 55 115 -4 51 112 -3 26 10 108 -6 58 23 99 
java/math/BigInteger.remainderBurnikelZiegler(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
5
r0 1 -1 
r1 1 -2 
$r3 1 6 
_ret 1 6 
$r2 1 2 
Fields: 1
2 ArrayObject 6
Accesses: 0
Functions: 1
0 2 -1 -2 
Constructors: 0

Summary: 4
-2 2 -1 0 
java/math/BigInteger.writeObject(Ljava/io/ObjectOutputStream;)V
PTG:
Vars:
4
$r3 1 21 
r0 1 -2 
r1 1 4 
r2 1 -1 
Fields: 0
Accesses: 1
9 1 -1 
Functions: 9
0 1 -2 
32 1 4 
49 1 4 
20 1 -1 
24 2 4 21 
40 1 4 
58 1 4 
13 1 4 
62 1 -2 
Constructors: 0

Summary: 4
4 -2 -1 21 
java/math/BigInteger.makePositive([I)[I
PTG:
Vars:
3
r1 1 59 
r0 1 -2 
_ret 1 59 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 2
-2 0 
java/math/BigInteger.jacobiSymbol(ILjava/math/BigInteger;)I
PTG:
Vars:
5
$r4 1 110 
$r1 1 9 
$r3 1 107 
$r2 1 9 
r0 1 -3 
Fields: 1
-3 mag 9
Accesses: 2
8 1 -3 
12 1 -3 
Functions: 4
179 0 
104 3 -3 9 107 
106 0 
110 1 110 
Constructors: 0

Summary: 4
110 107 -3 9 
java/math/BigInteger.implMontgomeryMultiply([I[I[IIJ[I)[I
PTG:
Vars:
7
$r3 1 18 
r5 1 9 
r1 1 -3 
_ret 1 18 
r0 1 -2 
r4 1 -7 
r2 1 -4 
Fields: 0
Accesses: 0
Functions: 2
17 2 -4 9 
4 3 -2 -3 -7 
Constructors: 0

Summary: 5
-2 -7 -4 -3 9 
java/math/BigInteger.stripLeadingZeroBytes([B)[I
PTG:
Vars:
3
_ret 1 31 
r0 1 -2 
r1 1 31 
Fields: 0
Accesses: 0
Functions: 1
75 0 
Constructors: 0

Summary: 2
-2 0 
java/math/BigInteger.addOne([IIII)I
PTG:
Vars:
1
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 2
-2 0 
java/math/BigInteger.remainder(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
7
$r1 1 1 
_ret 1 34 
r2 1 -1 
r0 1 -2 
$r4 1 11 
$r6 1 34 
$r5 1 1 
Fields: 2
-2 mag 1
-1 mag 11
Accesses: 3
0 1 -2 
10 1 -1 
15 1 -2 
Functions: 2
32 4 -1 -2 1 11 
26 4 -1 -2 1 11 
Constructors: 0

Summary: 3
1 -2 -1 
java/math/BigInteger.firstNonzeroIntNum()I
PTG:
Vars:
3
r0 1 -1 
$r2 1 16 
$r1 1 16 
Fields: 1
-1 mag 16
Accesses: 4
0 1 -1 
54 1 -1 
29 1 -1 
15 1 -1 
Functions: 0
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.abs()Ljava/math/BigInteger;
PTG:
Vars:
3
_ret 2 12 -1 
$r1 2 12 -1 
r0 1 -1 
Fields: 0
Accesses: 1
0 1 -1 
Functions: 1
11 1 -1 
Constructors: 0

Summary: 0

java/math/BigInteger.square()Ljava/math/BigInteger;
PTG:
Vars:
3
$r1 1 2 
_ret 1 2 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
0 1 -1 
Constructors: 0

Summary: 0

java/math/BigInteger.add([IJ)[I
PTG:
Vars:
3
r0 1 -2 
_ret 2 21 97 
r2 2 21 97 
Fields: 0
Accesses: 0
Functions: 1
263 2 97 21 
Constructors: 0

Summary: 2
-2 0 
java/math/BigInteger.largePrime(IILjava/util/Random;)Ljava/math/BigInteger;
PTG:
Vars:
13
$r0 1 0 
$r2 1 17 
_ret 2 59 149 
$r7 1 113 
r1 1 -4 
$r5 1 81 
$r6 1 113 
$r3 1 17 
$r4 1 39 
r12 2 59 149 
r10 3 111 15 87 
$r8 1 129 
$r9 1 96 
Fields: 3
111 mag 113
15 mag 17
87 mag 113
Accesses: 4
16 3 87 111 15 
112 3 87 111 15 
20 3 87 111 15 
116 3 87 111 15 
Functions: 13
0 1 0 
96 1 96 
33 0 
66 2 149 59 
6 2 0 -4 
102 2 96 -4 
136 6 129 113 17 87 111 15 
75 6 113 17 81 87 111 15 
141 7 129 113 17 -4 87 111 15 
46 6 113 17 39 87 111 15 
80 0 
51 7 113 17 -4 39 87 111 15 
88 5 113 17 87 111 15 
Constructors: 4
6 0
102 96
136 129
46 39

Summary: 12
0 111 39 15 -4 17 87 113 96 149 81 129 
java/math/BigInteger.equals(Ljava/lang/Object;)Z
PTG:
Vars:
5
r1 1 -1 
r4 1 47 
r3 1 38 
r0 1 -2 
r2 1 -2 
Fields: 2
-2 mag 47
-1 mag 38
Accesses: 4
34 1 -1 
21 1 -2 
25 1 -1 
43 1 -2 
Functions: 0
Constructors: 0

Summary: 4
47 -2 -1 0 
java/math/BigInteger.destructiveMulAdd([III)V
PTG:
Vars:
1
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 2
-2 0 
java/math/BigInteger.doubleValue()D
PTG:
Vars:
11
$r7 1 10 
$r10 1 10 
$r9 1 10 
$r4 1 10 
$r6 1 221 
$r2 1 10 
r0 1 -1 
$r8 1 10 
$r3 1 10 
$r5 1 10 
$r1 1 10 
Fields: 1
-1 mag 10
Accesses: 12
0 1 -1 
129 1 -1 
18 1 -1 
50 1 -1 
98 1 -1 
274 1 -1 
150 1 -1 
120 1 -1 
9 1 -1 
90 1 -1 
109 1 -1 
159 1 -1 
Functions: 5
37 2 -1 10 
23 0 
220 2 -1 10 
221 1 221 
286 0 
Constructors: 0

Summary: 0

java/math/BigInteger.shortValueExact()S
PTG:
Vars:
3
r0 1 -1 
$r2 1 42 
$r1 1 1 
Fields: 1
-1 mag 1
Accesses: 1
0 1 -1 
Functions: 4
49 1 42 
18 2 -1 1 
37 2 -1 1 
9 2 -1 1 
Constructors: 1
49 42

Summary: 1
-1 
java/math/BigInteger.multiply(Ljava/math/BigInteger;Z)Ljava/math/BigInteger;
PTG:
Vars:
10
r2 1 -1 
$r24 1 227 
r0 1 -2 
$r18 1 41 
$r17 1 19 
_ret 1 227 
$r3 1 19 
$r4 1 41 
$r19 1 41 
$r16 1 19 
Fields: 2
-2 mag 41
-1 mag 19
Accesses: 18
0 1 -2 
64 1 -2 
128 1 -1 
193 1 -1 
133 1 -2 
7 1 -1 
103 1 -1 
40 1 -2 
201 1 -2 
205 1 -2 
78 1 -2 
112 1 -2 
18 1 -1 
116 1 -1 
87 1 -1 
91 1 -2 
60 1 -1 
189 1 -1 
Functions: 11
160 0 
97 0 
145 0 
209 1 41 
226 4 -1 -2 19 41 
35 2 -1 19 
180 4 -1 -2 19 41 
197 1 19 
122 0 
139 0 
222 0 
Constructors: 0

Summary: 3
-2 0 41 
java/math/BigInteger.smallPrime(IILjava/util/Random;)Ljava/math/BigInteger;
PTG:
Vars:
5
$r4 1 107 
r0 1 8 
$r1 1 84 
$r3 1 104 
r2 1 -4 
Fields: 0
Accesses: 0
Functions: 5
258 2 -4 84 
102 2 84 104 
91 2 84 8 
107 1 107 
44 1 -4 
Constructors: 1
91 84

Summary: 3
107 -4 8 
java/math/BigInteger.bitLengthForInt(I)I
PTG:
Vars:
0
Fields: 0
Accesses: 0
Functions: 1
2 0 
Constructors: 0

Summary: 0

java/math/BigInteger.implMulAddCheck([I[IIII)V
PTG:
Vars:
2
r1 1 -2 
r0 1 -3 
Fields: 0
Accesses: 0
Functions: 26
64 0 
133 0 
70 0 
137 0 
10 0 
14 0 
142 0 
146 0 
19 0 
86 0 
23 0 
151 0 
90 0 
28 0 
158 0 
95 0 
33 0 
99 0 
164 0 
39 0 
104 0 
111 0 
51 0 
117 0 
55 0 
60 0 
Constructors: 0

Summary: 4
-2 -3 0 1 
java/math/BigInteger.<init>([B)V
PTG:
Vars:
6
$r5 1 27 
r0 1 -1 
r1 1 -2 
$r3 1 51 
$r7 1 51 
$r2 1 43 
Fields: 1
-1 mag 51
Accesses: 6
50 1 -1 
66 1 -1 
35 1 -1 
30 1 -1 
46 1 -1 
63 1 -1 
Functions: 5
1 2 -1 51 
26 1 -2 
42 1 -2 
77 2 -1 51 
15 0 
Constructors: 1
1 -1

Summary: 3
-2 -1 0 
java/math/BigInteger.parseInt([CII)I
PTG:
Vars:
2
r5 1 -1 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 6
48 0 
6 0 
70 1 -2 
73 0 
28 1 -2 
31 0 
Constructors: 0

Summary: 5
23 65 -2 -1 0 
java/math/BigInteger.nextProbablePrime()Ljava/math/BigInteger;
PTG:
Vars:
8
$r2 1 42 
r5 1 314 
$r19 1 296 
$r6 1 329 
$r7 1 281 
r0 1 -1 
$r3 1 56 
r17 1 335 
Fields: 0
Accesses: 2
0 1 -1 
34 1 -1 
Functions: 25
324 2 329 335 
261 1 335 
72 1 335 
328 0 
11 0 
15 0 
80 1 335 
272 1 335 
20 1 -1 
24 0 
88 1 335 
280 2 281 335 
30 0 
288 1 335 
97 1 335 
289 0 
228 1 335 
101 0 
41 2 -1 42 
302 2 296 335 
239 1 335 
306 2 296 335 
55 2 -1 56 
249 1 335 
63 1 335 
Constructors: 1
302 296

Summary: 12
20 335 268 296 24 287 329 11 27 235 -1 101 
java/math/BigInteger.makePositive([B)[I
PTG:
Vars:
3
r1 1 68 
_ret 1 68 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 1
110 0 
Constructors: 0

Summary: 2
-2 0 
java/math/BigInteger.shiftLeft(I)Ljava/math/BigInteger;
PTG:
Vars:
3
r0 1 -1 
$r1 1 44 
_ret 1 44 
Fields: 0
Accesses: 3
0 1 -1 
19 1 -1 
27 1 -1 
Functions: 3
23 0 
41 1 -1 
31 0 
Constructors: 0

Summary: 0

java/math/BigInteger.intLength()I
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
0 1 -1 
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.modInverse(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
10
r7 1 94 
r2 1 -1 
$r8 1 99 
$r3 1 69 
$r1 1 19 
_ret 1 99 
r12 2 54 -1 
$r5 1 78 
$r13 1 56 
r0 1 -2 
Fields: 0
Accesses: 2
0 1 -2 
34 1 -1 
Functions: 9
96 1 94 
49 2 -1 -2 
18 2 -2 19 
83 2 -2 78 
55 3 -1 54 56 
88 2 69 78 
41 2 -1 -2 
74 3 -1 69 54 
14 0 
Constructors: 2
83 78
74 69

Summary: 6
-2 54 94 78 69 -1 
java/math/BigInteger.remainderKnuth(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
10
$r8 1 25 
r3 1 -1 
$r0 1 0 
$r2 1 8 
$r4 1 13 
$r10 1 37 
_ret 1 44 
$r6 1 20 
r7 1 -2 
$r11 1 44 
Fields: 2
-2 mag 25
-1 mag 13
Accesses: 3
24 1 -2 
40 1 -1 
12 1 -1 
Functions: 5
16 2 8 13 
33 3 0 20 8 
4 1 0 
37 1 37 
28 2 20 25 
Constructors: 3
16 8
4 0
28 20

Summary: 8
0 -2 37 -1 25 8 0 20 
java/math/BigInteger.materialize([II)[I
PTG:
Vars:
2
r0 2 11 -2 
_ret 2 11 -2 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 0

java/math/BigInteger.longValueExact()J
PTG:
Vars:
3
r0 1 -1 
$r2 1 23 
$r1 1 1 
Fields: 1
-1 mag 1
Accesses: 1
0 1 -1 
Functions: 3
18 2 -1 1 
9 2 -1 1 
30 1 23 
Constructors: 1
30 23

Summary: 1
-1 
java/math/BigInteger.probablePrime(ILjava/util/Random;)Ljava/math/BigInteger;
PTG:
Vars:
3
$r2 2 25 35 
_ret 2 25 35 
r0 1 -3 
Fields: 0
Accesses: 0
Functions: 3
34 1 -3 
24 1 -3 
11 0 
Constructors: 0

Summary: 1
-3 
java/math/BigInteger.getInt(I)I
PTG:
Vars:
4
$r3 1 8 
$r2 1 8 
r0 1 -1 
$r1 1 8 
Fields: 1
-1 mag 8
Accesses: 4
35 1 -1 
20 1 -1 
7 1 -1 
24 1 -1 
Functions: 2
15 2 -1 8 
47 2 -1 8 
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.mulAdd([I[IIII)I
PTG:
Vars:
2
r1 1 -3 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 2
6 2 -2 -3 
13 2 -2 -3 
Constructors: 0

Summary: 4
1 -2 -3 0 
java/math/BigInteger.leftShift([III)[I
PTG:
Vars:
3
r2 1 80 
r0 1 -2 
_ret 1 80 
Fields: 0
Accesses: 0
Functions: 6
69 0 
103 1 80 
90 2 80 -2 
59 1 -2 
12 0 
31 1 -2 
Constructors: 0

Summary: 0

java/math/BigInteger.bitLength([II)I
PTG:
Vars:
1
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 1
13 0 
Constructors: 0

Summary: 2
-2 0 
java/math/BigInteger.implSquareToLen([II[II)[I
PTG:
Vars:
3
r0 1 -4 
_ret 1 -4 
r1 1 -2 
Fields: 0
Accesses: 0
Functions: 3
102 2 -2 -4 
118 1 -4 
134 1 -4 
Constructors: 0

Summary: 3
-2 2 0 
java/math/BigInteger.longValue()J
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
12 1 -1 
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.subN([I[II)I
PTG:
Vars:
2
r0 1 -2 
r1 1 -3 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 2
-2 -3 
java/math/BigInteger.<clinit>()V
PTG:
Vars:
80
$r2 1 275 
$r54 1 1359 
$r40 1 1010 
$r44 1 1050 
$r4 1 291 
$r25 1 860 
$r15 1 515 
$r60 1 1659 
$r12 1 454 
$r46 1 1070 
$r47 1 1080 
$r55 1 1615 
$r76 1 326 
$r79 1 336 
$r19 1 802 
$r14 1 509 
$r6 1 366 
$r28 1 890 
$r20 1 811 
$r43 1 1040 
$r30 1 910 
$r17 1 777 
$r48 1 1090 
$r31 1 920 
$r65 1 1700 
$r5 1 358 
$r11 1 445 
$r64 1 1691 
$r73 1 391 
$r41 1 1020 
$r21 1 820 
$r61 1 1668 
$r8 1 417 
$r24 1 850 
$r37 1 980 
$r3 1 283 
$r22 1 830 
$r39 1 1000 
$r33 1 940 
$r72 1 379 
$r78 1 340 
$r26 1 870 
$r77 1 322 
$r18 1 793 
$r67 1 536 
$r42 1 1030 
$r7 1 412 
r75 1 315 
$r32 1 930 
$r50 1 1110 
$r9 1 427 
$r49 1 1100 
$r51 1 1120 
$r57 1 1627 
$r0 1 0 
$r52 1 1130 
$r70 1 544 
$r56 1 1620 
$r53 1 1139 
$r63 1 1684 
$r74 1 396 
$r59 1 1652 
$r45 1 1060 
$r36 1 970 
$r62 1 1675 
$r29 1 900 
$r34 1 950 
$r1 1 18 
$r10 1 436 
$r13 1 462 
$r71 1 384 
$r66 1 1707 
$r69 1 532 
$r38 1 990 
$r58 1 1636 
$r23 1 840 
$r27 1 880 
$r35 1 960 
$r68 1 541 
$r16 1 556 
Fields: 2
536 ArrayObject 541
515 ArrayObject 523
Accesses: 0
Functions: 54
0 1 0 
897 0 
1027 0 
390 0 
907 0 
1037 0 
1678 2 1668 1675 
272 0 
401 0 
917 0 
790 0 
1047 0 
541 1 541 
1694 2 1684 1691 
799 0 
927 0 
1057 0 
420 2 417 412 
808 0 
297 0 
937 0 
426 0 
1067 0 
1710 2 1700 1707 
433 0 
817 0 
947 0 
1077 0 
442 0 
827 0 
957 0 
1087 0 
451 0 
837 0 
967 0 
1097 0 
332 2 326 315 
847 0 
977 0 
1107 0 
857 0 
346 2 340 315 
987 0 
1117 0 
1630 2 1620 1627 
867 0 
997 0 
1127 0 
877 0 
1646 1 1636 
1007 0 
887 0 
1017 0 
1662 2 1652 1659 
Constructors: 9
420 412
346 340
332 326
1630 1620
1646 1636
1662 1652
1678 1668
1694 1684
1710 1700

Summary: 2
315 417 
java/math/BigInteger.andNot(Ljava/math/BigInteger;)Ljava/math/BigInteger;
PTG:
Vars:
5
$r3 1 55 
r0 1 -1 
r1 1 -2 
_ret 1 55 
r2 1 11 
Fields: 0
Accesses: 0
Functions: 6
0 1 -1 
34 1 -2 
4 1 -2 
5 0 
54 1 11 
24 1 -1 
Constructors: 0

Summary: 3
11 -2 -1 
java/math/BigInteger.pow(I)Ljava/math/BigInteger;
PTG:
Vars:
5
r17 3 341 396 365 
$r1 1 164 
_ret 3 341 396 365 
r15 3 76 37 381 
r0 1 -1 
Fields: 2
76 mag 164
37 mag 164
Accesses: 7
163 3 37 76 381 
133 1 -1 
181 1 -1 
89 1 -1 
205 3 37 76 381 
14 1 -1 
398 1 -1 
Functions: 19
33 1 -1 
389 3 341 396 365 
38 4 164 37 76 381 
71 4 164 37 76 381 
103 0 
359 7 164 341 37 396 76 365 381 
296 0 
297 0 
10 0 
77 4 164 37 76 381 
335 0 
112 0 
311 0 
121 4 164 37 76 381 
377 4 164 37 76 381 
59 0 
316 1 -1 
412 3 341 396 365 
286 0 
Constructors: 0

Summary: 0

java/math/BigInteger.shiftRightImpl(I)Ljava/math/BigInteger;
PTG:
Vars:
11
$r2 1 10 
$r7 1 10 
_ret 1 276 
r0 1 -1 
r10 4 113 63 274 90 
$r4 1 10 
$r5 1 10 
$r3 1 10 
$r1 1 10 
$r11 1 276 
$r6 1 10 
Fields: 1
-1 mag 10
Accesses: 10
144 1 -1 
54 1 -1 
71 1 -1 
9 1 -1 
25 1 -1 
282 1 -1 
171 1 -1 
157 1 -1 
205 1 -1 
237 1 -1 
Functions: 3
58 1 10 
268 6 -1 113 274 10 90 63 
286 5 113 274 276 90 63 
Constructors: 1
286 276

Summary: 3
113 -1 90 
java/math/BigInteger.<init>([II)V
PTG:
Vars:
3
r1 1 -2 
r0 1 -1 
$r2 1 24 
Fields: 1
-1 mag 24
Accesses: 3
20 1 -1 
23 1 -1 
15 1 -1 
Functions: 2
1 2 -1 24 
34 2 -1 24 
Constructors: 1
1 -1

Summary: 2
-1 0 
java/math/BigInteger.signum()I
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 1
0 1 -1 
Functions: 0
Constructors: 0

Summary: 1
-1 
java/math/BigInteger.squareToLen([II[I)[I
PTG:
Vars:
4
r0 1 -2 
_ret 1 29 
$r2 1 29 
r1 2 -4 15 
Fields: 0
Accesses: 0
Functions: 2
22 3 -2 -4 15 
28 3 -2 -4 15 
Constructors: 0

Summary: 4
-2 -4 0 15 
java/math/BigInteger.<init>(J)V
PTG:
Vars:
6
$r5 1 44 
$r1 1 56 
$r3 1 62 
r0 1 -1 
$r2 1 62 
$r4 1 38 
Fields: 2
-1 mag 44
-1 mag 62
Accesses: 7
68 1 -1 
23 1 -1 
40 1 -1 
58 1 -1 
43 1 -1 
61 1 -1 
15 1 -1 
Functions: 1
1 3 -1 44 62 
Constructors: 1
1 -1

Summary: 1
-1 
java/math/BigInteger.smallToString(I)Ljava/lang/String;
PTG:
Vars:
25
$r12 1 240 
_ret 1 268 
r28 1 52 
$r13 1 245 
$r10 1 255 
r25 1 136 
$r5 1 202 
$r16 1 47 
$r21 1 83 
$r4 1 167 
$r26 1 150 
$r9 1 226 
$r18 1 63 
$r20 1 77 
r2 1 26 
$r8 1 218 
$r3 1 161 
$r7 1 268 
$r1 1 13 
$r19 1 69 
$r17 1 54 
r24 1 118 
r0 1 -1 
r23 1 100 
r27 2 118 34 
Fields: 8
47 ArrayObject 52
52 mag 83
240 ArrayObject 245
34 mag 69
26 ArrayObject 202
26 ArrayObject 226
26 ArrayObject 255
-1 mag 13
Accesses: 10
0 1 -1 
81 1 52 
67 2 34 118 
180 1 -1 
39 2 34 118 
104 2 34 118 
122 2 34 118 
12 1 -1 
109 1 52 
127 1 52 
Functions: 16
256 2 161 255 
226 1 226 
102 1 54 
72 2 69 63 
266 1 161 
203 2 161 202 
175 1 161 
144 1 136 
149 0 
86 2 83 77 
246 2 161 245 
120 1 100 
58 1 54 
91 3 54 77 63 
30 2 -1 13 
191 1 161 
Constructors: 4
86 77
72 63
58 54
175 161

Summary: 6
26 226 77 255 54 202 
java/math/BigInteger.toString(I)Ljava/lang/String;
PTG:
Vars:
6
$r4 1 57 
$r3 1 85 
_ret 1 85 
$r7 1 26 
$r1 1 41 
r0 1 -1 
Fields: 1
-1 mag 26
Accesses: 3
0 1 -1 
49 1 -1 
25 1 -1 
Functions: 7
81 3 -1 41 26 
35 2 -1 26 
84 1 41 
70 1 41 
56 2 -1 26 
45 1 41 
63 2 57 41 
Constructors: 1
45 41

Summary: 0

java/math/BigInteger.getRadixConversionCache(II)Ljava/math/BigInteger;
PTG:
Vars:
12
r9 1 23 
$r4 1 75 
r10 1 62 
$r2 1 68 
r11 1 75 
r8 1 5 
_ret 1 95 
$r6 1 49 
$r5 1 47 
$r0 1 0 
$r1 1 23 
$r3 1 95 
Fields: 4
62 ArrayObject 68
0 ArrayObject 5
23 ArrayObject 47
23 ArrayObject 95
Accesses: 0
Functions: 3
22 1 5 
73 2 68 62 
47 1 47 
Constructors: 0

Summary: 1
49 
java/math/BigInteger.valueOf([I)Ljava/math/BigInteger;
PTG:
Vars:
3
_ret 2 6 18 
$r1 2 6 18 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 2
23 3 -2 18 6 
12 3 -2 18 6 
Constructors: 0

Summary: 2
-2 0 
java/math/BigInteger.square(Z)Ljava/math/BigInteger;
PTG:
Vars:
6
_ret 1 87 
$r10 1 87 
$r2 1 12 
r0 1 -1 
$r3 1 12 
$r1 1 12 
Fields: 1
-1 mag 12
Accesses: 5
0 1 -1 
67 1 -1 
24 1 -1 
11 1 -1 
63 1 -1 
Functions: 7
83 0 
38 0 
54 2 -1 12 
86 2 -1 12 
71 1 12 
43 0 
29 0 
Constructors: 0

Summary: 0

java/math/BigInteger.<init>(IILjava/util/Random;)V
PTG:
Vars:
4
r0 1 -1 
$r5 2 37 28 
$r3 1 50 
r1 1 -4 
Fields: 2
37 mag 50
28 mag 50
Accesses: 3
48 2 37 28 
53 1 -1 
44 1 -1 
Functions: 4
1 1 -1 
36 1 -4 
27 1 -4 
15 0 
Constructors: 1
1 -1

Summary: 4
37 28 -4 -1 
java/math/BigInteger.<init>([I)V
PTG:
Vars:
6
$r5 1 27 
r1 1 -2 
$r3 1 51 
r0 1 -1 
$r2 1 43 
$r7 1 51 
Fields: 1
-1 mag 51
Accesses: 6
50 1 -1 
66 1 -1 
35 1 -1 
30 1 -1 
46 1 -1 
63 1 -1 
Functions: 5
1 2 -1 51 
26 1 -2 
42 1 -2 
77 2 -1 51 
15 0 
Constructors: 1
1 -1

Summary: 3
-2 -1 0 
