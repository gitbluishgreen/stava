4
java/util/regex/Pattern$Branch.<init>(Ljava/util/regex/Pattern$Node;Ljava/util/regex/Pattern$Node;Ljava/util/regex/Pattern$Node;)V
PTG:
Vars:
7
r3 1 -2 
r2 1 -4 
$r1 1 6 
$r4 1 23 
r0 1 -1 
$r6 1 23 
r5 1 -3 
Fields: 1
-1 atoms 23
Accesses: 5
19 1 -1 
22 1 -1 
9 1 -1 
29 1 -1 
14 1 -1 
Functions: 1
1 2 -1 23 
Constructors: 1
1 -1

Summary: 3
1 -1 0 
java/util/regex/Pattern$Branch.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z
PTG:
Vars:
9
$r2 1 18 
r5 1 -4 
$r1 1 13 
$r3 1 13 
$r7 1 23 
r4 1 -2 
$r6 1 46 
r0 1 -1 
$r8 1 26 
Fields: 5
-1 atoms 13
-1 conn 23
23 next 26
13 ArrayObject 18
13 ArrayObject 46
Accesses: 5
5 1 -1 
22 1 -1 
23 1 23 
40 1 -1 
12 1 -1 
Functions: 2
26 3 -2 -4 26 
46 3 -2 -4 46 
Constructors: 0

Summary: 5
-2 -4 -1 2 0 
java/util/regex/Pattern$Branch.add(Ljava/util/regex/Pattern$Node;)V
PTG:
Vars:
8
$r7 1 5 
r5 1 19 
r0 1 -1 
$r4 1 5 
$r1 1 5 
$r2 1 5 
$r6 1 5 
r3 1 -2 
Fields: 1
-1 atoms 5
Accesses: 9
0 1 -1 
4 1 -1 
23 1 -1 
55 1 -1 
40 1 -1 
43 1 -1 
12 1 -1 
30 1 -1 
47 1 -1 
Functions: 1
35 2 19 5 
Constructors: 0

Summary: 2
-1 0 
java/util/regex/Pattern$Branch.study(Ljava/util/regex/Pattern$TreeInfo;)Z
PTG:
Vars:
8
r1 1 -1 
$r2 1 113 
r0 1 -2 
$r4 1 40 
$r3 1 116 
$r7 1 55 
$r6 1 40 
$r5 1 45 
Fields: 5
-1 atoms 40
-1 conn 113
40 ArrayObject 45
40 ArrayObject 55
113 next 116
Accesses: 18
0 1 -2 
131 1 -2 
5 1 -2 
134 1 -2 
39 1 -1 
10 1 -2 
74 1 -2 
141 1 -2 
112 1 -1 
144 1 -2 
49 1 -1 
113 1 113 
85 1 -2 
152 1 -2 
28 1 -1 
124 1 -2 
157 1 -2 
63 1 -2 
Functions: 6
64 0 
36 1 -2 
120 2 -2 116 
57 2 -2 55 
75 0 
109 1 -2 
Constructors: 0

Summary: 3
-2 -1 0 
