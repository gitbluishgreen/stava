12
java/util/Spliterators$DoubleArraySpliterator.characteristics()I
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 1
0 1 -1 
Functions: 0
Constructors: 0

Summary: 1
-1 
java/util/Spliterators$DoubleArraySpliterator.trySplit()Ljava/util/Spliterator$OfDouble;
PTG:
Vars:
4
$r1 1 28 
_ret 1 23 
r0 1 -1 
$r2 1 23 
Fields: 1
-1 array 28
Accesses: 5
0 1 -1 
35 1 -1 
6 1 -1 
38 1 -1 
27 1 -1 
Functions: 1
42 2 23 28 
Constructors: 1
42 23

Summary: 1
-1 
java/util/Spliterators$DoubleArraySpliterator.forEachRemaining(Ljava/lang/Object;)V
PTG:
Vars:
3
r1 1 -2 
r0 1 -1 
$r2 1 -2 
Fields: 0
Accesses: 0
Functions: 1
5 2 -1 -2 
Constructors: 0

Summary: 3
0 -1 -2 
java/util/Spliterators$DoubleArraySpliterator.<init>([DIII)V
PTG:
Vars:
2
r0 1 -1 
r1 1 -2 
Fields: 0
Accesses: 4
16 1 -1 
6 1 -1 
11 1 -1 
29 1 -1 
Functions: 1
1 1 -1 
Constructors: 1
1 -1

Summary: 2
0 -1 
java/util/Spliterators$DoubleArraySpliterator.tryAdvance(Ljava/util/function/DoubleConsumer;)Z
PTG:
Vars:
2
r1 1 -1 
r0 1 -2 
Fields: 0
Accesses: 6
19 1 -1 
35 1 -1 
23 1 -1 
43 1 -1 
12 1 -1 
31 1 -1 
Functions: 2
8 0 
47 1 -2 
Constructors: 0

Summary: 3
0 -1 -2 
java/util/Spliterators$DoubleArraySpliterator.tryAdvance(Ljava/lang/Object;)Z
PTG:
Vars:
3
r1 1 -2 
$r2 1 -2 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
0 2 -1 -2 
Constructors: 0

Summary: 3
0 -1 -2 
java/util/Spliterators$DoubleArraySpliterator.<init>([DI)V
PTG:
Vars:
2
r0 1 -1 
r1 1 -2 
Fields: 0
Accesses: 0
Functions: 1
6 2 -1 -2 
Constructors: 1
6 -1

Summary: 3
0 -1 -2 
java/util/Spliterators$DoubleArraySpliterator.estimateSize()J
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 2
0 1 -1 
4 1 -1 
Functions: 0
Constructors: 0

Summary: 1
-1 
java/util/Spliterators$DoubleArraySpliterator.trySplit()Ljava/util/Spliterator$OfPrimitive;
PTG:
Vars:
3
$r1 1 1 
_ret 1 1 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
0 1 -1 
Constructors: 0

Summary: 1
-1 
java/util/Spliterators$DoubleArraySpliterator.trySplit()Ljava/util/Spliterator;
PTG:
Vars:
3
r0 1 -1 
$r1 1 1 
_ret 1 1 
Fields: 0
Accesses: 0
Functions: 1
0 1 -1 
Constructors: 0

Summary: 1
-1 
java/util/Spliterators$DoubleArraySpliterator.forEachRemaining(Ljava/util/function/DoubleConsumer;)V
PTG:
Vars:
3
$r2 1 13 
r0 1 -2 
r1 1 -1 
Fields: 1
-1 array 13
Accesses: 4
19 1 -1 
43 1 -1 
12 1 -1 
29 1 -1 
Functions: 2
53 1 -2 
8 0 
Constructors: 0

Summary: 3
0 -1 -2 
java/util/Spliterators$DoubleArraySpliterator.getComparator()Ljava/util/Comparator;
PTG:
Vars:
2
r0 1 -1 
$r1 1 10 
Fields: 0
Accesses: 0
Functions: 2
0 1 -1 
14 1 10 
Constructors: 1
14 10

Summary: 1
-1 
