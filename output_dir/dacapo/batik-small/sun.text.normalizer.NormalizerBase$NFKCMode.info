10
sun/text/normalizer/NormalizerBase$NFKCMode.isNFSkippable(I)Z
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
2 1 -1 
Constructors: 0

Summary: 1
-1 
sun/text/normalizer/NormalizerBase$NFKCMode.quickCheck([CIIZLsun/text/normalizer/UnicodeSet;)Lsun/text/normalizer/NormalizerBase$QuickCheckResult;
PTG:
Vars:
5
r1 1 -6 
_ret 1 17 
r0 1 -2 
$r2 1 17 
r3 1 -1 
Fields: 0
Accesses: 0
Functions: 2
3 0 
15 2 -2 -6 
Constructors: 0

Summary: 3
-6 -1 -2 
sun/text/normalizer/NormalizerBase$NFKCMode.normalize([CII[CIILsun/text/normalizer/UnicodeSet;)I
PTG:
Vars:
4
r2 1 -8 
r1 1 -5 
r0 1 -2 
r3 1 -1 
Fields: 0
Accesses: 0
Functions: 1
12 3 -2 -5 -8 
Constructors: 0

Summary: 7
3 0 -5 -8 -1 -2 6 
sun/text/normalizer/NormalizerBase$NFKCMode.<init>(I)V
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
3 1 -1 
Constructors: 1
3 -1

Summary: 1
-1 
sun/text/normalizer/NormalizerBase$NFKCMode.normalize(Ljava/lang/String;I)Ljava/lang/String;
PTG:
Vars:
4
$r1 1 3 
r0 1 -2 
r2 1 -1 
_ret 1 3 
Fields: 0
Accesses: 0
Functions: 1
2 1 -2 
Constructors: 0

Summary: 3
0 -1 -2 
sun/text/normalizer/NormalizerBase$NFKCMode.getNextBoundary()Lsun/text/normalizer/NormalizerBase$IsNextBoundary;
PTG:
Vars:
3
r1 1 -1 
$r0 1 0 
_ret 1 0 
Fields: 0
Accesses: 0
Functions: 1
5 1 0 
Constructors: 1
5 0

Summary: 1
-1 
sun/text/normalizer/NormalizerBase$NFKCMode.getMask()I
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 1
-1 
sun/text/normalizer/NormalizerBase$NFKCMode.getMinC()I
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
0 0 
Constructors: 0

Summary: 1
-1 
sun/text/normalizer/NormalizerBase$NFKCMode.<init>(ILsun/text/normalizer/NormalizerBase$1;)V
PTG:
Vars:
2
r1 1 -3 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
2 1 -1 
Constructors: 1
2 -1

Summary: 2
-3 -1 
sun/text/normalizer/NormalizerBase$NFKCMode.getPrevBoundary()Lsun/text/normalizer/NormalizerBase$IsPrevBoundary;
PTG:
Vars:
3
r1 1 -1 
_ret 1 0 
$r0 1 0 
Fields: 0
Accesses: 0
Functions: 1
5 1 0 
Constructors: 1
5 0

Summary: 1
-1 
