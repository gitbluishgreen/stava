11
java/util/concurrent/atomic/AtomicMarkableReference.weakCompareAndSet(Ljava/lang/Object;Ljava/lang/Object;ZZ)Z
PTG:
Vars:
3
r0 1 -1 
r1 1 -2 
r2 1 -3 
Fields: 0
Accesses: 0
Functions: 1
0 3 -1 -2 -3 
Constructors: 0

Summary: 3
-1 -3 -2 
java/util/concurrent/atomic/AtomicMarkableReference.isMarked()Z
PTG:
Vars:
2
r0 1 -1 
$r1 1 1 
Fields: 1
-1 pair 1
Accesses: 2
0 1 -1 
1 1 1 
Functions: 0
Constructors: 0

Summary: 1
-1 
java/util/concurrent/atomic/AtomicMarkableReference.casPair(Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;)Z
PTG:
Vars:
4
$r3 1 0 
r2 1 -3 
r0 1 -1 
r1 1 -2 
Fields: 0
Accesses: 0
Functions: 1
0 4 0 -1 -2 -3 
Constructors: 0

Summary: 2
1 0 
java/util/concurrent/atomic/AtomicMarkableReference.objectFieldOffset(Lsun/misc/Unsafe;Ljava/lang/String;Ljava/lang/Class;)J
PTG:
Vars:
6
r0 1 -2 
r2 1 -3 
r1 1 -4 
$r3 1 3 
$r6 1 11 
$r4 1 -1 
Fields: 0
Accesses: 0
Functions: 4
0 2 -2 3 
16 2 -3 11 
1 2 -3 -4 
24 2 -1 11 
Constructors: 1
16 11

Summary: 3
-4 -3 -2 
java/util/concurrent/atomic/AtomicMarkableReference.set(Ljava/lang/Object;Z)V
PTG:
Vars:
5
r2 1 -2 
$r4 1 24 
r0 1 -1 
$r3 1 7 
r1 1 4 
Fields: 2
-1 pair 4
4 reference 7
Accesses: 4
0 1 -1 
6 1 4 
27 1 -1 
14 1 4 
Functions: 1
23 1 -2 
Constructors: 0

Summary: 2
-1 -2 
java/util/concurrent/atomic/AtomicMarkableReference.compareAndSet(Ljava/lang/Object;Ljava/lang/Object;ZZ)Z
PTG:
Vars:
7
r0 1 -1 
$r5 1 9 
$r3 1 9 
r4 1 -3 
r2 1 -2 
$r6 1 49 
r1 1 4 
Fields: 2
-1 pair 4
4 reference 9
Accesses: 5
0 1 -1 
16 1 4 
35 1 4 
7 1 4 
25 1 4 
Functions: 2
43 4 -1 49 4 9 
47 1 -3 
Constructors: 0

Summary: 3
1 -3 -2 
java/util/concurrent/atomic/AtomicMarkableReference.<init>(Ljava/lang/Object;Z)V
PTG:
Vars:
3
r1 1 -2 
$r2 1 7 
r0 1 -1 
Fields: 0
Accesses: 1
10 1 -1 
Functions: 2
1 1 -1 
6 1 -2 
Constructors: 1
1 -1

Summary: 2
-1 -2 
java/util/concurrent/atomic/AtomicMarkableReference.<clinit>()V
PTG:
Vars:
2
$r0 1 0 
$r1 1 6 
Fields: 0
Accesses: 0
Functions: 2
-1 0 
11 1 6 
Constructors: 0

Summary: 0

java/util/concurrent/atomic/AtomicMarkableReference.get([Z)Ljava/lang/Object;
PTG:
Vars:
5
r1 1 4 
_ret 1 13 
r0 1 -1 
r2 1 -2 
$r3 1 13 
Fields: 2
-1 pair 4
4 reference 13
Accesses: 3
0 1 -1 
7 1 4 
12 1 4 
Functions: 0
Constructors: 0

Summary: 3
-1 0 -2 
java/util/concurrent/atomic/AtomicMarkableReference.attemptMark(Ljava/lang/Object;Z)Z
PTG:
Vars:
5
r0 1 -1 
r2 1 -2 
$r3 1 7 
r1 1 4 
$r4 1 25 
Fields: 2
-1 pair 4
4 reference 7
Accesses: 3
0 1 -1 
6 1 4 
14 1 4 
Functions: 2
21 4 -1 4 7 25 
24 1 -2 
Constructors: 0

Summary: 2
25 -2 
java/util/concurrent/atomic/AtomicMarkableReference.getReference()Ljava/lang/Object;
PTG:
Vars:
4
$r1 1 1 
_ret 1 4 
$r2 1 4 
r0 1 -1 
Fields: 2
-1 pair 1
1 reference 4
Accesses: 2
0 1 -1 
1 1 1 
Functions: 0
Constructors: 0

Summary: 1
-1 
