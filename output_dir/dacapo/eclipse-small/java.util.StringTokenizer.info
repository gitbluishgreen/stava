13
java/util/StringTokenizer.<init>(Ljava/lang/String;Ljava/lang/String;Z)V
PTG:
Vars:
3
r1 1 -2 
r2 1 -3 
r0 1 -1 
Fields: 0
Accesses: 8
16 1 -1 
34 1 -1 
21 1 -1 
6 1 -1 
39 1 -1 
26 1 -1 
11 1 -1 
44 1 -1 
Functions: 3
48 1 -1 
1 1 -1 
30 1 -2 
Constructors: 1
1 -1

Summary: 3
1 0 -1 
java/util/StringTokenizer.isDelimiter(I)Z
PTG:
Vars:
3
r0 1 -1 
$r2 1 4 
$r1 1 4 
Fields: 1
-1 delimiterCodePoints 4
Accesses: 2
3 1 -1 
11 1 -1 
Functions: 0
Constructors: 0

Summary: 1
-1 
java/util/StringTokenizer.nextToken()Ljava/lang/String;
PTG:
Vars:
4
$r1 1 80 
$r2 1 88 
r0 1 -1 
_ret 1 88 
Fields: 1
-1 str 80
Accesses: 14
1 1 -1 
35 1 -1 
69 1 -1 
8 1 -1 
40 1 -1 
43 1 -1 
76 1 -1 
15 1 -1 
47 1 -1 
79 1 -1 
84 1 -1 
23 1 -1 
30 1 -1 
62 1 -1 
Functions: 4
80 1 80 
68 2 -1 80 
22 2 -1 80 
58 0 
Constructors: 0

Summary: 1
-1 
java/util/StringTokenizer.hasMoreTokens()Z
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 4
16 1 -1 
2 1 -1 
9 1 -1 
12 1 -1 
Functions: 1
1 1 -1 
Constructors: 0

Summary: 1
-1 
java/util/StringTokenizer.setMaxDelimCodePoint()V
PTG:
Vars:
8
r0 1 -1 
$r2 1 1 
$r5 1 133 
$r6 1 1 
$r4 1 1 
$r1 1 1 
$r3 1 105 
$r7 1 1 
Fields: 2
-1 delimiters 1
-1 delimiterCodePoints 133
Accesses: 11
0 1 -1 
32 1 -1 
96 1 -1 
66 1 -1 
132 1 -1 
22 1 -1 
54 1 -1 
9 1 -1 
122 1 -1 
107 1 -1 
93 1 -1 
Functions: 6
33 1 1 
81 0 
145 0 
23 1 1 
55 1 1 
123 1 1 
Constructors: 0

Summary: 1
-1 
java/util/StringTokenizer.scanToken(I)I
PTG:
Vars:
7
$r3 1 35 
r0 1 -1 
$r6 1 35 
$r4 2 18 55 
$r5 2 18 55 
$r2 2 18 55 
$r1 2 18 55 
Fields: 3
-1 delimiters 35
-1 str 18
-1 str 55
Accesses: 14
64 1 -1 
128 1 -1 
34 1 -1 
3 1 -1 
104 1 -1 
10 1 -1 
111 1 -1 
17 1 -1 
145 1 -1 
54 1 -1 
121 1 -1 
27 1 -1 
155 1 -1 
92 1 -1 
Functions: 10
112 2 18 55 
129 1 35 
18 2 18 55 
146 2 18 55 
162 4 -1 18 35 55 
35 1 35 
83 0 
55 2 18 55 
71 4 -1 18 35 55 
171 0 
Constructors: 0

Summary: 1
-1 
java/util/StringTokenizer.hasMoreElements()Z
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
0 1 -1 
Constructors: 0

Summary: 1
-1 
java/util/StringTokenizer.countTokens()I
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 3
2 1 -1 
22 1 -1 
8 1 -1 
Functions: 2
32 1 -1 
15 1 -1 
Constructors: 0

Summary: 1
-1 
java/util/StringTokenizer.skipDelimiters(I)I
PTG:
Vars:
5
$r2 2 40 77 
r0 1 -1 
$r1 1 1 
$r3 2 40 77 
$r4 1 1 
Fields: 3
-1 delimiters 1
-1 str 40
-1 str 77
Accesses: 9
0 1 -1 
32 1 -1 
17 1 -1 
49 1 -1 
86 1 -1 
39 1 -1 
56 1 -1 
25 1 -1 
76 1 -1 
Functions: 6
40 2 40 77 
57 1 1 
105 0 
11 0 
77 2 40 77 
93 4 -1 1 40 77 
Constructors: 0

Summary: 1
-1 
java/util/StringTokenizer.nextElement()Ljava/lang/Object;
PTG:
Vars:
3
r0 1 -1 
$r1 1 1 
_ret 1 1 
Fields: 0
Accesses: 0
Functions: 1
0 1 -1 
Constructors: 0

Summary: 1
-1 
java/util/StringTokenizer.<init>(Ljava/lang/String;)V
PTG:
Vars:
2
r0 1 -1 
r1 1 -2 
Fields: 0
Accesses: 0
Functions: 1
5 2 -1 -2 
Constructors: 1
5 -1

Summary: 3
-2 0 -1 
java/util/StringTokenizer.nextToken(Ljava/lang/String;)Ljava/lang/String;
PTG:
Vars:
4
$r2 1 15 
r1 1 -2 
r0 1 -1 
_ret 1 15 
Fields: 0
Accesses: 2
2 1 -1 
7 1 -1 
Functions: 2
11 1 -1 
14 1 -1 
Constructors: 0

Summary: 1
-1 
java/util/StringTokenizer.<init>(Ljava/lang/String;Ljava/lang/String;)V
PTG:
Vars:
3
r2 1 -3 
r1 1 -2 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
4 3 -1 -2 -3 
Constructors: 1
4 -1

Summary: 5
-2 1 0 -1 -3 
