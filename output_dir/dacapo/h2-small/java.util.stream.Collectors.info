112
java/util/stream/Collectors.lambda$summarizingInt$61(Ljava/util/IntSummaryStatistics;Ljava/util/IntSummaryStatistics;)Ljava/util/IntSummaryStatistics;
PTG:
Vars:
3
_ret 1 -2 
r1 1 -3 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 1
2 2 -2 -3 
Constructors: 0

Summary: 3
1 0 -3 
java/util/stream/Collectors.lambda$toCollection$2(Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Collection;
PTG:
Vars:
3
_ret 1 -2 
r1 1 -3 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 1
2 2 -2 -3 
Constructors: 0

Summary: 3
1 0 -3 
java/util/stream/Collectors.summarizingLong(Ljava/util/function/ToLongFunction;)Ljava/util/stream/Collector;
PTG:
Vars:
7
_ret 1 0 
$r4 1 15 
$r3 1 10 
r2 1 -2 
$r1 1 4 
$r0 1 0 
$r5 1 20 
Fields: 0
Accesses: 0
Functions: 3
-1 0 
23 5 0 4 20 10 15 
9 1 -2 
Constructors: 1
23 0

Summary: 4
4 15 -2 10 
java/util/stream/Collectors.lambda$averagingLong$28([J[J)[J
PTG:
Vars:
3
_ret 1 -2 
r0 1 -2 
r1 1 -3 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 3
1 0 -3 
java/util/stream/Collectors.lambda$averagingInt$23(Ljava/util/function/ToIntFunction;[JLjava/lang/Object;)V
PTG:
Vars:
3
r1 1 -2 
r0 1 -3 
r2 1 -4 
Fields: 0
Accesses: 0
Functions: 1
4 2 -2 -4 
Constructors: 0

Summary: 5
1 -2 -4 -3 2 
java/util/stream/Collectors.lambda$null$44(Ljava/util/function/Supplier;Ljava/lang/Object;)Ljava/lang/Object;
PTG:
Vars:
4
_ret 1 1 
r2 1 -3 
$r1 1 1 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 1
0 1 -2 
Constructors: 0

Summary: 3
1 -2 -3 
java/util/stream/Collectors.lambda$summarizingDouble$64(Ljava/util/function/ToDoubleFunction;Ljava/util/DoubleSummaryStatistics;Ljava/lang/Object;)V
PTG:
Vars:
3
r0 1 -3 
r1 1 -2 
r2 1 -4 
Fields: 0
Accesses: 0
Functions: 2
1 2 -2 -4 
8 1 -3 
Constructors: 0

Summary: 5
1 -2 -4 -3 2 
java/util/stream/Collectors.<init>()V
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
1 1 -1 
Constructors: 1
1 -1

Summary: 1
-1 
java/util/stream/Collectors.lambda$averagingInt$25([J)Ljava/lang/Double;
PTG:
Vars:
3
_ret 1 21 
r0 1 -2 
$r1 1 21 
Fields: 0
Accesses: 0
Functions: 1
20 0 
Constructors: 0

Summary: 2
-2 0 
java/util/stream/Collectors.summingLong(Ljava/util/function/ToLongFunction;)Ljava/util/stream/Collector;
PTG:
Vars:
8
_ret 1 0 
$r5 1 20 
$r0 1 0 
r2 1 -2 
$r3 1 10 
$r6 1 25 
$r4 1 15 
$r1 1 4 
Fields: 0
Accesses: 0
Functions: 3
-1 0 
9 1 -2 
28 6 0 4 20 25 10 15 
Constructors: 1
28 0

Summary: 5
4 15 -2 10 20 
java/util/stream/Collectors.lambda$groupingBy$47(Ljava/util/function/Function;Ljava/util/Map;)Ljava/util/Map;
PTG:
Vars:
4
_ret 1 -3 
$r2 1 2 
r1 1 -2 
r0 1 -3 
Fields: 0
Accesses: 0
Functions: 2
1 1 -2 
7 2 -3 2 
Constructors: 0

Summary: 3
1 -2 2 
java/util/stream/Collectors.lambda$toConcurrentMap$59(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;)V
PTG:
Vars:
7
$r3 1 4 
$r5 1 12 
r0 1 -5 
r2 1 -6 
r4 1 -3 
r6 1 -4 
r1 1 -2 
Fields: 0
Accesses: 0
Functions: 3
1 2 -2 -6 
18 4 -4 -5 4 12 
9 2 -3 -6 
Constructors: 0

Summary: 8
4 3 -2 12 4 -4 -6 -3 
java/util/stream/Collectors.partitioningBy(Ljava/util/function/Predicate;)Ljava/util/stream/Collector;
PTG:
Vars:
4
r0 1 -2 
_ret 1 4 
$r1 1 1 
$r2 1 4 
Fields: 0
Accesses: 0
Functions: 2
-1 0 
1 2 -2 1 
Constructors: 0

Summary: 2
-2 1 
java/util/stream/Collectors.lambda$reducing$40(Ljava/util/stream/Collectors$1OptionalBox;)Ljava/util/Optional;
PTG:
Vars:
4
_ret 1 4 
r0 1 -2 
$r2 1 4 
$r1 1 1 
Fields: 1
-2 value 1
Accesses: 1
0 1 -2 
Functions: 1
1 1 1 
Constructors: 0

Summary: 3
-2 1 0 
java/util/stream/Collectors.averagingDouble(Ljava/util/function/ToDoubleFunction;)Ljava/util/stream/Collector;
PTG:
Vars:
8
_ret 1 0 
$r3 1 10 
r2 1 -2 
$r4 1 15 
$r5 1 20 
$r0 1 0 
$r1 1 4 
$r6 1 25 
Fields: 0
Accesses: 0
Functions: 3
-1 0 
9 1 -2 
28 6 0 4 20 25 10 15 
Constructors: 1
28 0

Summary: 5
4 15 -2 10 20 
java/util/stream/Collectors.lambda$toSet$4(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;
PTG:
Vars:
3
_ret 1 -2 
r0 1 -2 
r1 1 -3 
Fields: 0
Accesses: 0
Functions: 1
2 2 -2 -3 
Constructors: 0

Summary: 3
1 0 -3 
java/util/stream/Collectors.lambda$summarizingInt$60(Ljava/util/function/ToIntFunction;Ljava/util/IntSummaryStatistics;Ljava/lang/Object;)V
PTG:
Vars:
3
r2 1 -4 
r1 1 -2 
r0 1 -3 
Fields: 0
Accesses: 0
Functions: 2
1 2 -2 -4 
8 1 -3 
Constructors: 0

Summary: 5
1 -2 -4 -3 2 
java/util/stream/Collectors.castingIdentity()Ljava/util/function/Function;
PTG:
Vars:
2
_ret 1 0 
$r0 1 0 
Fields: 0
Accesses: 0
Functions: 1
-1 0 
Constructors: 0

Summary: 0

java/util/stream/Collectors.joining()Ljava/util/stream/Collector;
PTG:
Vars:
7
_ret 1 0 
$r1 1 4 
$r2 1 9 
$r0 1 0 
$r3 1 14 
$r4 1 19 
$r5 1 24 
Fields: 0
Accesses: 0
Functions: 2
-1 0 
27 6 0 19 4 24 9 14 
Constructors: 1
27 0

Summary: 4
4 19 9 14 
java/util/stream/Collectors.lambda$averagingLong$26()[J
PTG:
Vars:
2
_ret 1 1 
$r0 1 1 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 0

java/util/stream/Collectors.groupingBy(Ljava/util/function/Function;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;
PTG:
Vars:
5
_ret 1 7 
r2 1 -3 
$r3 1 7 
$r1 1 1 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 2
-1 0 
6 3 -2 1 -3 
Constructors: 0

Summary: 3
-2 1 -3 
java/util/stream/Collectors.reducing(Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;
PTG:
Vars:
10
$r2 1 5 
_ret 1 0 
$r5 1 10 
$r0 1 0 
$r7 1 21 
r4 1 -3 
r3 1 -4 
$r8 1 26 
$r6 1 16 
r1 1 -2 
Fields: 0
Accesses: 0
Functions: 5
-1 0 
4 1 -2 
9 2 -3 -4 
29 6 0 16 5 21 10 26 
15 1 -4 
Constructors: 1
29 0

Summary: 7
5 16 21 -2 10 -4 -3 
java/util/stream/Collectors.maxBy(Ljava/util/Comparator;)Ljava/util/stream/Collector;
PTG:
Vars:
4
_ret 1 4 
$r2 1 4 
$r1 1 1 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 2
0 1 -2 
1 1 1 
Constructors: 0

Summary: 2
-2 1 
java/util/stream/Collectors.lambda$averagingLong$29([J)Ljava/lang/Double;
PTG:
Vars:
3
_ret 1 21 
$r1 1 21 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 1
20 0 
Constructors: 0

Summary: 2
-2 0 
java/util/stream/Collectors.toMap(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;
PTG:
Vars:
6
_ret 1 8 
$r4 1 8 
r0 1 -2 
r2 1 -4 
$r3 1 3 
r1 1 -3 
Fields: 0
Accesses: 0
Functions: 2
-1 0 
3 4 -2 -3 -4 3 
Constructors: 0

Summary: 4
3 -2 -4 -3 
java/util/stream/Collectors.lambda$averagingDouble$31(Ljava/util/function/ToDoubleFunction;[DLjava/lang/Object;)V
PTG:
Vars:
3
r0 1 -3 
r1 1 -2 
r2 1 -4 
Fields: 0
Accesses: 0
Functions: 3
1 2 -2 -4 
23 2 -2 -4 
8 1 -3 
Constructors: 0

Summary: 5
1 -2 -4 -3 2 
java/util/stream/Collectors.lambda$groupingByConcurrent$53(Ljava/util/function/Function;Ljava/util/concurrent/ConcurrentMap;)Ljava/util/concurrent/ConcurrentMap;
PTG:
Vars:
4
_ret 1 -3 
r1 1 -2 
r0 1 -3 
$r2 1 2 
Fields: 0
Accesses: 0
Functions: 2
1 1 -2 
7 2 -3 2 
Constructors: 0

Summary: 3
1 -2 2 
java/util/stream/Collectors.lambda$null$48(Ljava/util/function/Supplier;Ljava/lang/Object;)Ljava/lang/Object;
PTG:
Vars:
4
_ret 1 1 
$r1 1 1 
r2 1 -3 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 1
0 1 -2 
Constructors: 0

Summary: 3
1 -2 -3 
java/util/stream/Collectors.lambda$reducing$35(Ljava/util/function/BinaryOperator;[Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
PTG:
Vars:
7
_ret 1 -3 
$r5 1 9 
r0 1 -3 
$r3 1 8 
$r4 1 5 
r1 1 -2 
r2 1 -4 
Fields: 2
-4 ArrayObject 8
-3 ArrayObject 5
Accesses: 0
Functions: 1
2 3 -2 5 8 
Constructors: 0

Summary: 5
1 -2 -4 8 2 
java/util/stream/Collectors.lambda$groupingBy$45(Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/Map;Ljava/lang/Object;)V
PTG:
Vars:
9
r4 1 -5 
r5 1 -3 
$r6 1 19 
r8 1 -4 
r1 1 -6 
r0 1 -2 
r3 1 13 
r7 1 29 
$r2 1 3 
Fields: 0
Accesses: 0
Functions: 5
0 2 -2 -6 
18 1 -3 
36 3 -4 -6 29 
8 1 3 
15 3 19 -5 13 
Constructors: 0

Summary: 10
29 19 3 3 -2 13 4 -4 -6 -3 
java/util/stream/Collectors.lambda$reducing$36([Ljava/lang/Object;)Ljava/lang/Object;
PTG:
Vars:
3
_ret 1 2 
r0 1 -2 
$r1 1 2 
Fields: 1
-2 ArrayObject 2
Accesses: 0
Functions: 0
Constructors: 0

Summary: 2
-2 0 
java/util/stream/Collectors.lambda$summingDouble$19(Ljava/util/function/ToDoubleFunction;[DLjava/lang/Object;)V
PTG:
Vars:
3
r1 1 -2 
r2 1 -4 
r0 1 -3 
Fields: 0
Accesses: 0
Functions: 3
16 2 -2 -4 
1 2 -2 -4 
8 1 -3 
Constructors: 0

Summary: 5
1 -2 -4 -3 2 
java/util/stream/Collectors.lambda$summingDouble$21([D)Ljava/lang/Double;
PTG:
Vars:
3
_ret 1 4 
r0 1 -2 
$r1 1 4 
Fields: 0
Accesses: 0
Functions: 2
0 1 -2 
1 0 
Constructors: 0

Summary: 2
-2 0 
java/util/stream/Collectors.toMap(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
PTG:
Vars:
6
_ret 1 10 
r0 1 -2 
$r2 1 2 
$r3 1 5 
$r4 1 10 
r1 1 -3 
Fields: 0
Accesses: 0
Functions: 2
-1 0 
5 4 -2 -3 2 5 
Constructors: 0

Summary: 4
5 -2 2 -3 
java/util/stream/Collectors.groupingByConcurrent(Ljava/util/function/Function;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;
PTG:
Vars:
5
_ret 1 7 
$r3 1 7 
r0 1 -2 
r2 1 -3 
$r1 1 1 
Fields: 0
Accesses: 0
Functions: 2
-1 0 
6 3 -2 1 -3 
Constructors: 0

Summary: 3
-2 1 -3 
java/util/stream/Collectors.toSet()Ljava/util/stream/Collector;
PTG:
Vars:
6
_ret 1 0 
$r0 1 0 
$r1 1 4 
$r3 1 14 
$r4 1 19 
$r2 1 9 
Fields: 0
Accesses: 0
Functions: 2
-1 0 
22 5 0 19 4 9 14 
Constructors: 1
22 0

Summary: 3
4 9 14 
java/util/stream/Collectors.lambda$summingDouble$18()[D
PTG:
Vars:
2
_ret 1 1 
$r0 1 1 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 0

java/util/stream/Collectors.lambda$summingLong$15(Ljava/util/function/ToLongFunction;[JLjava/lang/Object;)V
PTG:
Vars:
3
r0 1 -3 
r2 1 -4 
r1 1 -2 
Fields: 0
Accesses: 0
Functions: 1
4 2 -2 -4 
Constructors: 0

Summary: 5
1 -2 -4 -3 2 
java/util/stream/Collectors.lambda$counting$9(Ljava/lang/Object;)Ljava/lang/Long;
PTG:
Vars:
3
_ret 1 1 
r1 1 -2 
$r0 1 1 
Fields: 0
Accesses: 0
Functions: 1
0 0 
Constructors: 0

Summary: 2
-2 0 
java/util/stream/Collectors.lambda$averagingInt$22()[J
PTG:
Vars:
2
_ret 1 1 
$r0 1 1 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 0

java/util/stream/Collectors.lambda$partitioningBy$54(Ljava/util/function/BiConsumer;Ljava/util/function/Predicate;Ljava/util/stream/Collectors$Partition;Ljava/lang/Object;)V
PTG:
Vars:
5
r2 1 -5 
r1 1 -3 
$r5 2 19 12 
r0 1 -2 
r3 1 -4 
Fields: 2
-4 forTrue 12
-4 forFalse 19
Accesses: 2
18 1 -4 
11 1 -4 
Functions: 2
1 2 -3 -5 
23 4 -2 19 -5 12 
Constructors: 0

Summary: 8
19 3 -5 -2 12 -4 -3 2 
java/util/stream/Collectors.summarizingInt(Ljava/util/function/ToIntFunction;)Ljava/util/stream/Collector;
PTG:
Vars:
7
$r1 1 4 
_ret 1 0 
$r4 1 15 
$r3 1 10 
r2 1 -2 
$r5 1 20 
$r0 1 0 
Fields: 0
Accesses: 0
Functions: 3
-1 0 
23 5 0 4 20 10 15 
9 1 -2 
Constructors: 1
23 0

Summary: 4
4 15 -2 10 
java/util/stream/Collectors.lambda$toList$3(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
PTG:
Vars:
3
_ret 1 -2 
r0 1 -2 
r1 1 -3 
Fields: 0
Accesses: 0
Functions: 1
2 2 -2 -3 
Constructors: 0

Summary: 3
1 0 -3 
java/util/stream/Collectors.reducing(Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;
PTG:
Vars:
8
$r6 1 25 
_ret 1 0 
$r0 1 0 
$r4 1 15 
$r5 1 20 
r1 1 -2 
$r3 1 10 
$r2 1 5 
Fields: 0
Accesses: 0
Functions: 3
-1 0 
4 1 -2 
28 6 0 20 5 25 10 15 
Constructors: 1
28 0

Summary: 5
5 15 -2 10 20 
java/util/stream/Collectors.lambda$summingInt$11(Ljava/util/function/ToIntFunction;[ILjava/lang/Object;)V
PTG:
Vars:
3
r2 1 -4 
r1 1 -2 
r0 1 -3 
Fields: 0
Accesses: 0
Functions: 1
4 2 -2 -4 
Constructors: 0

Summary: 5
1 -2 -4 -3 2 
java/util/stream/Collectors.lambda$null$50(Ljava/util/function/Supplier;Ljava/lang/Object;)Ljava/lang/Object;
PTG:
Vars:
4
_ret 1 1 
r0 1 -2 
$r1 1 1 
r2 1 -3 
Fields: 0
Accesses: 0
Functions: 1
0 1 -2 
Constructors: 0

Summary: 3
1 -2 -3 
java/util/stream/Collectors.summarizingDouble(Ljava/util/function/ToDoubleFunction;)Ljava/util/stream/Collector;
PTG:
Vars:
7
_ret 1 0 
$r0 1 0 
$r3 1 10 
$r4 1 15 
$r5 1 20 
$r1 1 4 
r2 1 -2 
Fields: 0
Accesses: 0
Functions: 3
-1 0 
23 5 0 4 20 10 15 
9 1 -2 
Constructors: 1
23 0

Summary: 4
4 15 -2 10 
java/util/stream/Collectors.lambda$averagingDouble$30()[D
PTG:
Vars:
2
_ret 1 1 
$r0 1 1 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 0

java/util/stream/Collectors.minBy(Ljava/util/Comparator;)Ljava/util/stream/Collector;
PTG:
Vars:
4
_ret 1 4 
$r1 1 1 
r0 1 -2 
$r2 1 4 
Fields: 0
Accesses: 0
Functions: 2
0 1 -2 
1 1 1 
Constructors: 0

Summary: 2
-2 1 
java/util/stream/Collectors.computeFinalSum([D)D
PTG:
Vars:
1
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 2
22 0 
15 0 
Constructors: 0

Summary: 2
-2 0 
java/util/stream/Collectors.sumWithCompensation([DD)[D
PTG:
Vars:
2
r0 1 -2 
_ret 1 -2 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 1
0 
java/util/stream/Collectors.lambda$summingLong$14()[J
PTG:
Vars:
2
_ret 1 1 
$r0 1 1 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 0

java/util/stream/Collectors.reducing(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;
PTG:
Vars:
9
$r0 1 0 
_ret 1 0 
$r4 1 9 
r1 1 -2 
$r5 1 15 
$r2 1 5 
r3 1 -3 
$r7 1 25 
$r6 1 20 
Fields: 0
Accesses: 0
Functions: 5
-1 0 
4 1 -2 
8 1 -3 
28 6 0 20 5 9 25 15 
14 1 -3 
Constructors: 1
28 0

Summary: 6
5 9 15 -2 20 -3 
java/util/stream/Collectors.counting()Ljava/util/stream/Collector;
PTG:
Vars:
5
$r3 1 14 
_ret 1 14 
$r2 1 9 
$r1 1 4 
$r0 1 1 
Fields: 0
Accesses: 0
Functions: 3
0 0 
-1 0 
9 3 1 4 9 
Constructors: 0

Summary: 3
4 9 1 
java/util/stream/Collectors.toConcurrentMap(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
PTG:
Vars:
6
_ret 1 10 
r0 1 -2 
$r4 1 10 
r1 1 -3 
$r2 1 2 
$r3 1 5 
Fields: 0
Accesses: 0
Functions: 2
-1 0 
5 4 -2 -3 2 5 
Constructors: 0

Summary: 4
5 -2 2 -3 
java/util/stream/Collectors.mapping(Ljava/util/function/Function;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;
PTG:
Vars:
10
$r3 1 12 
_ret 1 7 
$r8 1 37 
$r5 1 19 
$r6 1 25 
r4 1 -2 
r1 1 6 
$r2 1 7 
$r7 1 31 
r0 1 -3 
Fields: 0
Accesses: 0
Functions: 7
0 1 -3 
18 2 -2 6 
36 1 -3 
24 1 -3 
42 6 19 37 7 25 12 31 
11 1 -3 
30 1 -3 
Constructors: 1
42 7

Summary: 8
6 19 31 -2 12 25 37 -3 
java/util/stream/Collectors.lambda$reducing$42(Ljava/util/function/BinaryOperator;[Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
PTG:
Vars:
7
$r3 1 8 
_ret 1 -3 
$r5 1 9 
r0 1 -3 
r1 1 -2 
$r4 1 5 
r2 1 -4 
Fields: 2
-4 ArrayObject 8
-3 ArrayObject 5
Accesses: 0
Functions: 1
2 3 -2 5 8 
Constructors: 0

Summary: 5
1 -2 -4 8 2 
java/util/stream/Collectors.lambda$groupingByConcurrent$51(Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;)V
PTG:
Vars:
9
r7 1 29 
r10 1 -4 
r0 1 -2 
r5 1 -3 
$r2 1 3 
r3 1 13 
r4 1 -5 
$r6 1 19 
r1 1 -6 
Fields: 0
Accesses: 0
Functions: 5
0 2 -2 -6 
18 1 -3 
8 1 3 
42 3 -4 -6 29 
15 3 19 -5 13 
Constructors: 0

Summary: 9
19 3 3 -2 13 4 -4 -6 -3 
java/util/stream/Collectors.lambda$mapping$8(Ljava/util/function/BiConsumer;Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;)V
PTG:
Vars:
5
$r4 1 4 
r0 1 -2 
r2 1 -3 
r3 1 -5 
r1 1 -4 
Fields: 0
Accesses: 0
Functions: 2
2 2 -3 -5 
9 3 -2 -4 4 
Constructors: 0

Summary: 7
4 3 -5 -2 -4 -3 2 
java/util/stream/Collectors.toList()Ljava/util/stream/Collector;
PTG:
Vars:
6
_ret 1 0 
$r3 1 14 
$r0 1 0 
$r4 1 19 
$r1 1 4 
$r2 1 9 
Fields: 0
Accesses: 0
Functions: 2
-1 0 
22 5 0 19 4 9 14 
Constructors: 1
22 0

Summary: 3
4 9 14 
java/util/stream/Collectors.partitioningBy(Ljava/util/function/Predicate;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;
PTG:
Vars:
13
r2 1 -2 
$r8 1 46 
r1 1 6 
$r11 1 92 
r9 1 79 
$r10 1 81 
r4 1 21 
r3 1 14 
r0 1 -3 
r5 1 30 
_ret 1 81 
r6 1 38 
$r7 1 41 
Fields: 0
Accesses: 0
Functions: 10
0 1 -3 
32 1 -3 
69 3 38 14 30 
23 1 21 
8 2 -2 6 
40 1 -3 
41 2 41 46 
73 1 -3 
15 1 -3 
95 6 81 38 92 14 30 79 
Constructors: 1
95 81

Summary: 9
6 30 79 -2 14 38 -3 41 21 
java/util/stream/Collectors.access$000()Ljava/util/function/Function;
PTG:
Vars:
2
_ret 1 0 
$r0 1 0 
Fields: 0
Accesses: 0
Functions: 1
-1 0 
Constructors: 0

Summary: 0

java/util/stream/Collectors.lambda$averagingLong$27(Ljava/util/function/ToLongFunction;[JLjava/lang/Object;)V
PTG:
Vars:
3
r0 1 -3 
r2 1 -4 
r1 1 -2 
Fields: 0
Accesses: 0
Functions: 1
4 2 -2 -4 
Constructors: 0

Summary: 5
1 -2 -4 -3 2 
java/util/stream/Collectors.groupingByConcurrent(Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;
PTG:
Vars:
17
$r11 1 77 
$r14 1 122 
r4 1 24 
$r15 1 134 
$r3 1 16 
r0 1 -4 
$r7 1 30 
$r10 1 72 
r1 1 6 
_ret 1 122 
r18 2 55 69 
r9 1 -2 
r12 1 111 
r2 1 13 
r13 1 120 
$r8 1 35 
r5 1 -3 
Fields: 0
Accesses: 0
Functions: 14
0 1 -4 
101 4 -3 69 55 24 
7 1 -4 
71 1 -4 
72 2 72 77 
105 1 -4 
137 7 -3 69 134 55 24 120 122 
15 1 -4 
16 1 16 
48 3 -2 6 13 
113 1 111 
29 1 -4 
30 2 35 30 
62 3 -2 6 13 
Constructors: 1
137 122

Summary: 13
6 30 55 120 -2 13 -3 16 69 111 24 72 -4 
java/util/stream/Collectors.<clinit>()V
PTG:
Vars:
17
$r0 1 6 
$r13 1 45 
$r5 1 21 
$r1 1 3 
$r8 1 27 
$r16 1 60 
$r9 1 33 
$r12 1 48 
$r2 1 0 
$r7 1 24 
$r6 1 18 
$r15 1 54 
$r11 1 39 
$r14 1 51 
$r4 1 12 
$r3 1 9 
$r10 1 36 
Fields: 0
Accesses: 0
Functions: 9
48 2 48 45 
-1 0 
33 1 33 
51 1 51 
36 1 36 
21 2 18 21 
6 3 0 3 6 
24 1 24 
9 1 9 
Constructors: 0

Summary: 4
9 51 24 36 
java/util/stream/Collectors.toCollection(Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
PTG:
Vars:
6
_ret 1 0 
$r0 1 0 
$r3 1 10 
$r2 1 5 
r1 1 -2 
$r4 1 15 
Fields: 0
Accesses: 0
Functions: 2
-1 0 
18 5 0 -2 5 10 15 
Constructors: 1
18 0

Summary: 3
5 -2 10 
java/util/stream/Collectors.toConcurrentMap(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
PTG:
Vars:
9
_ret 1 10 
r2 1 -4 
$r4 1 10 
r3 1 8 
r1 1 -3 
r5 1 -5 
$r7 1 21 
r0 1 -2 
$r6 1 18 
Fields: 0
Accesses: 0
Functions: 3
17 1 -4 
2 3 -2 -3 -4 
24 5 18 -5 21 8 10 
Constructors: 1
24 10

Summary: 6
18 -5 -2 -4 8 -3 
java/util/stream/Collectors.lambda$summingInt$10()[I
PTG:
Vars:
2
_ret 1 1 
$r0 1 1 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 0

java/util/stream/Collectors.lambda$mapMerger$7(Ljava/util/function/BinaryOperator;Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
PTG:
Vars:
10
_ret 1 -3 
$r4 1 22 
r0 1 -4 
$r6 1 35 
$r1 1 1 
r3 1 -3 
$r7 1 42 
r2 1 11 
r5 1 22 
r8 1 -2 
Fields: 0
Accesses: 0
Functions: 7
0 1 -4 
48 4 -2 -3 35 42 
1 1 1 
33 1 22 
21 1 11 
40 1 22 
12 1 11 
Constructors: 0

Summary: 8
42 1 -2 35 1 22 -4 2 
java/util/stream/Collectors.lambda$groupingByConcurrent$49(Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;)V
PTG:
Vars:
9
$r2 1 3 
$r6 1 19 
r8 1 -4 
r7 1 29 
r4 1 -5 
r1 1 -6 
r3 1 13 
r0 1 -2 
r5 1 -3 
Fields: 0
Accesses: 0
Functions: 5
0 2 -2 -6 
18 1 -3 
36 3 -4 -6 29 
8 1 3 
15 3 19 -5 13 
Constructors: 0

Summary: 10
29 19 3 3 -2 13 4 -4 -6 -3 
java/util/stream/Collectors.collectingAndThen(Ljava/util/stream/Collector;Ljava/util/function/Function;)Ljava/util/stream/Collector;
PTG:
Vars:
13
$r10 1 79 
$r9 1 73 
$r1 1 8 
r5 1 40 
_ret 1 56 
r0 1 -2 
$r8 1 67 
r4 3 6 55 32 
r2 1 -3 
$r11 1 85 
$r3 1 42 
$r6 1 56 
$r7 1 61 
Fields: 0
Accesses: 0
Functions: 12
0 1 -2 
66 1 -2 
19 3 32 6 55 
51 1 40 
36 3 32 6 55 
7 4 32 6 55 8 
72 1 -2 
91 8 32 67 85 6 55 56 73 61 
60 1 -2 
45 2 40 42 
78 1 -2 
79 2 -3 79 
Constructors: 1
91 56

Summary: 10
6 55 79 -2 61 73 85 -3 40 67 
java/util/stream/Collectors.lambda$castingIdentity$1(Ljava/lang/Object;)Ljava/lang/Object;
PTG:
Vars:
2
_ret 1 -2 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 1
0 
java/util/stream/Collectors.lambda$partitioningBy$57(Ljava/util/stream/Collector;Ljava/util/stream/Collectors$Partition;)Ljava/util/Map;
PTG:
Vars:
10
_ret 1 0 
$r0 1 0 
$r4 1 11 
$r6 1 20 
$r5 1 14 
$r8 1 29 
r3 1 -3 
$r7 1 26 
r1 1 -2 
$r2 1 5 
Fields: 2
-3 forTrue 11
-3 forFalse 26
Accesses: 2
25 1 -3 
10 1 -3 
Functions: 5
34 3 0 29 14 
19 1 -2 
4 1 -2 
20 2 20 26 
5 2 5 11 
Constructors: 1
34 0

Summary: 9
5 29 1 -2 11 14 20 26 -3 
java/util/stream/Collectors.lambda$throwingMerger$0(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
PTG:
Vars:
5
$r3 1 14 
r4 1 -3 
r2 1 -2 
$r0 1 0 
$r1 1 7 
Fields: 0
Accesses: 0
Functions: 2
17 2 0 14 
7 1 7 
Constructors: 1
17 0

Summary: 5
1 0 14 -3 7 
java/util/stream/Collectors.joining(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
PTG:
Vars:
3
_ret 1 5 
r0 1 -2 
$r1 1 5 
Fields: 0
Accesses: 0
Functions: 1
3 1 -2 
Constructors: 0

Summary: 1
-2 
java/util/stream/Collectors.lambda$summarizingDouble$65(Ljava/util/DoubleSummaryStatistics;Ljava/util/DoubleSummaryStatistics;)Ljava/util/DoubleSummaryStatistics;
PTG:
Vars:
3
_ret 1 -2 
r0 1 -2 
r1 1 -3 
Fields: 0
Accesses: 0
Functions: 1
2 2 -2 -3 
Constructors: 0

Summary: 3
1 0 -3 
java/util/stream/Collectors.lambda$averagingDouble$33([D)Ljava/lang/Double;
PTG:
Vars:
3
_ret 1 20 
$r1 1 20 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 2
19 0 
12 1 -2 
Constructors: 0

Summary: 2
-2 0 
java/util/stream/Collectors.throwingMerger()Ljava/util/function/BinaryOperator;
PTG:
Vars:
2
_ret 1 0 
$r0 1 0 
Fields: 0
Accesses: 0
Functions: 1
-1 0 
Constructors: 0

Summary: 0

java/util/stream/Collectors.lambda$reducing$39(Ljava/util/stream/Collectors$1OptionalBox;Ljava/util/stream/Collectors$1OptionalBox;)Ljava/util/stream/Collectors$1OptionalBox;
PTG:
Vars:
4
$r2 1 9 
_ret 1 -2 
r0 1 -3 
r1 1 -2 
Fields: 1
-3 value 9
Accesses: 2
0 1 -3 
8 1 -3 
Functions: 1
12 2 -2 9 
Constructors: 0

Summary: 4
9 1 0 -3 
java/util/stream/Collectors.lambda$summarizingLong$63(Ljava/util/LongSummaryStatistics;Ljava/util/LongSummaryStatistics;)Ljava/util/LongSummaryStatistics;
PTG:
Vars:
3
_ret 1 -2 
r1 1 -3 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 1
2 2 -2 -3 
Constructors: 0

Summary: 3
1 0 -3 
java/util/stream/Collectors.toMap(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
PTG:
Vars:
9
r0 1 -2 
$r6 1 18 
_ret 1 10 
r1 1 -3 
r5 1 -5 
$r7 1 21 
$r4 1 10 
r3 1 8 
r2 1 -4 
Fields: 0
Accesses: 0
Functions: 3
17 1 -4 
2 3 -2 -3 -4 
24 5 18 -5 21 8 10 
Constructors: 1
24 10

Summary: 6
18 -5 -2 -4 8 -3 
java/util/stream/Collectors.mapMerger(Ljava/util/function/BinaryOperator;)Ljava/util/function/BinaryOperator;
PTG:
Vars:
3
_ret 1 1 
$r1 1 1 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 1
0 1 -2 
Constructors: 0

Summary: 1
-2 
java/util/stream/Collectors.toConcurrentMap(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;
PTG:
Vars:
6
$r3 1 3 
_ret 1 8 
r2 1 -4 
r1 1 -3 
$r4 1 8 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 2
-1 0 
3 4 -2 -3 -4 3 
Constructors: 0

Summary: 4
3 -2 -4 -3 
java/util/stream/Collectors.lambda$reducing$38(Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collectors$1OptionalBox;
PTG:
Vars:
3
_ret 1 0 
$r0 1 0 
r1 1 -2 
Fields: 0
Accesses: 0
Functions: 1
5 2 0 -2 
Constructors: 1
5 0

Summary: 1
-2 
java/util/stream/Collectors.lambda$null$46(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
PTG:
Vars:
5
_ret 1 2 
r0 1 -2 
r3 1 -3 
r1 1 -4 
$r2 1 2 
Fields: 0
Accesses: 0
Functions: 1
0 2 -2 -4 
Constructors: 0

Summary: 5
1 -2 -4 -3 2 
java/util/stream/Collectors.lambda$toMap$58(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/Map;Ljava/lang/Object;)V
PTG:
Vars:
7
r4 1 -3 
r6 1 -4 
$r3 1 4 
r1 1 -2 
r2 1 -6 
$r5 1 12 
r0 1 -5 
Fields: 0
Accesses: 0
Functions: 3
1 2 -2 -6 
18 4 -4 -5 4 12 
9 2 -3 -6 
Constructors: 0

Summary: 8
4 3 -2 12 4 -4 -6 -3 
java/util/stream/Collectors.summingDouble(Ljava/util/function/ToDoubleFunction;)Ljava/util/stream/Collector;
PTG:
Vars:
8
_ret 1 0 
$r0 1 0 
r2 1 -2 
$r3 1 10 
$r4 1 15 
$r5 1 20 
$r1 1 4 
$r6 1 25 
Fields: 0
Accesses: 0
Functions: 3
-1 0 
9 1 -2 
28 6 0 4 20 25 10 15 
Constructors: 1
28 0

Summary: 5
4 15 -2 10 20 
java/util/stream/Collectors.lambda$summingLong$17([J)Ljava/lang/Long;
PTG:
Vars:
3
_ret 1 3 
r0 1 -2 
$r1 1 3 
Fields: 0
Accesses: 0
Functions: 1
2 0 
Constructors: 0

Summary: 2
-2 0 
java/util/stream/Collectors.lambda$null$52(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
PTG:
Vars:
5
_ret 1 2 
r3 1 -3 
r1 1 -4 
r0 1 -2 
$r2 1 2 
Fields: 0
Accesses: 0
Functions: 1
0 2 -2 -4 
Constructors: 0

Summary: 5
1 -2 -4 -3 2 
java/util/stream/Collectors.lambda$partitioningBy$55(Ljava/util/function/BinaryOperator;Ljava/util/stream/Collectors$Partition;Ljava/util/stream/Collectors$Partition;)Ljava/util/stream/Collectors$Partition;
PTG:
Vars:
11
_ret 1 0 
$r8 1 20 
r2 1 -3 
$r4 1 10 
r1 1 -2 
$r5 1 6 
$r6 1 13 
$r9 1 27 
r3 1 -4 
$r7 1 24 
$r0 1 0 
Fields: 4
-4 forTrue 10
-4 forFalse 24
-3 forTrue 6
-3 forFalse 20
Accesses: 4
19 1 -3 
5 1 -3 
23 1 -4 
9 1 -4 
Functions: 3
32 3 0 27 13 
18 3 -2 20 24 
4 3 -2 6 10 
Constructors: 1
32 0

Summary: 11
6 27 1 -2 13 20 -3 24 10 -4 2 
java/util/stream/Collectors.lambda$joining$6(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/StringJoiner;
PTG:
Vars:
5
_ret 1 0 
r1 1 -2 
r2 1 -3 
r3 1 -4 
$r0 1 0 
Fields: 0
Accesses: 0
Functions: 1
7 4 0 -2 -3 -4 
Constructors: 1
7 0

Summary: 3
-2 -4 -3 
java/util/stream/Collectors.lambda$reducing$41(Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/lang/Object;Ljava/lang/Object;)V
PTG:
Vars:
7
r0 1 -4 
r1 1 -2 
$r6 1 13 
r3 1 -5 
r2 1 -3 
$r4 1 5 
$r5 1 8 
Fields: 1
-4 ArrayObject 5
Accesses: 0
Functions: 2
2 3 -2 5 8 
6 2 -3 -5 
Constructors: 0

Summary: 8
5 3 -5 -2 -4 8 -3 2 
java/util/stream/Collectors.averagingLong(Ljava/util/function/ToLongFunction;)Ljava/util/stream/Collector;
PTG:
Vars:
8
_ret 1 0 
$r4 1 15 
r2 1 -2 
$r0 1 0 
$r5 1 20 
$r3 1 10 
$r6 1 25 
$r1 1 4 
Fields: 0
Accesses: 0
Functions: 3
-1 0 
9 1 -2 
28 6 0 4 20 25 10 15 
Constructors: 1
28 0

Summary: 5
4 15 -2 10 20 
java/util/stream/Collectors.summingInt(Ljava/util/function/ToIntFunction;)Ljava/util/stream/Collector;
PTG:
Vars:
8
_ret 1 0 
$r4 1 15 
$r1 1 4 
r2 1 -2 
$r0 1 0 
$r5 1 20 
$r3 1 10 
$r6 1 25 
Fields: 0
Accesses: 0
Functions: 3
-1 0 
9 1 -2 
28 6 0 4 20 25 10 15 
Constructors: 1
28 0

Summary: 5
4 15 -2 10 20 
java/util/stream/Collectors.boxSupplier(Ljava/lang/Object;)Ljava/util/function/Supplier;
PTG:
Vars:
3
_ret 1 1 
r0 1 -2 
$r1 1 1 
Fields: 0
Accesses: 0
Functions: 1
0 1 -2 
Constructors: 0

Summary: 1
-2 
java/util/stream/Collectors.groupingBy(Ljava/util/function/Function;)Ljava/util/stream/Collector;
PTG:
Vars:
4
_ret 1 4 
$r1 1 1 
$r2 1 4 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 2
-1 0 
1 2 -2 1 
Constructors: 0

Summary: 2
-2 1 
java/util/stream/Collectors.lambda$partitioningBy$56(Ljava/util/stream/Collector;)Ljava/util/stream/Collectors$Partition;
PTG:
Vars:
7
_ret 1 0 
$r2 1 5 
r1 1 -2 
$r4 1 16 
$r5 1 21 
$r0 1 0 
$r3 1 10 
Fields: 0
Accesses: 0
Functions: 5
16 1 16 
4 1 -2 
5 1 5 
26 3 0 21 10 
15 1 -2 
Constructors: 1
26 0

Summary: 5
5 16 21 -2 10 
java/util/stream/Collectors.lambda$summingLong$16([J[J)[J
PTG:
Vars:
3
_ret 1 -2 
r0 1 -2 
r1 1 -3 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 3
1 0 -3 
java/util/stream/Collectors.groupingByConcurrent(Ljava/util/function/Function;)Ljava/util/stream/Collector;
PTG:
Vars:
5
_ret 1 9 
r0 1 -2 
$r1 1 1 
$r2 1 6 
$r3 1 9 
Fields: 0
Accesses: 0
Functions: 2
-1 0 
6 3 -2 1 6 
Constructors: 0

Summary: 3
6 -2 1 
java/util/stream/Collectors.averagingInt(Ljava/util/function/ToIntFunction;)Ljava/util/stream/Collector;
PTG:
Vars:
8
_ret 1 0 
r2 1 -2 
$r1 1 4 
$r6 1 25 
$r0 1 0 
$r4 1 15 
$r3 1 10 
$r5 1 20 
Fields: 0
Accesses: 0
Functions: 3
-1 0 
9 1 -2 
28 6 0 4 20 25 10 15 
Constructors: 1
28 0

Summary: 5
4 15 -2 10 20 
java/util/stream/Collectors.lambda$reducing$34(Ljava/util/function/BinaryOperator;[Ljava/lang/Object;Ljava/lang/Object;)V
PTG:
Vars:
5
r1 1 -2 
$r3 1 5 
r2 1 -4 
r0 1 -3 
$r4 1 7 
Fields: 1
-3 ArrayObject 5
Accesses: 0
Functions: 1
2 3 -2 -4 5 
Constructors: 0

Summary: 6
5 1 -2 -4 -3 2 
java/util/stream/Collectors.lambda$averagingInt$24([J[J)[J
PTG:
Vars:
3
_ret 1 -2 
r1 1 -3 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 3
1 0 -3 
java/util/stream/Collectors.lambda$boxSupplier$37(Ljava/lang/Object;)[Ljava/lang/Object;
PTG:
Vars:
4
_ret 1 1 
$r0 1 1 
r1 1 -2 
$r2 1 1 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 0

java/util/stream/Collectors.lambda$summingDouble$20([D[D)[D
PTG:
Vars:
4
r1 1 -3 
_ret 1 21 
r0 1 -2 
$r3 1 21 
Fields: 0
Accesses: 0
Functions: 2
4 1 -2 
20 1 -2 
Constructors: 0

Summary: 4
1 -2 0 -3 
java/util/stream/Collectors.lambda$averagingDouble$32([D[D)[D
PTG:
Vars:
3
_ret 1 -2 
r1 1 -3 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 2
4 1 -2 
12 1 -2 
Constructors: 0

Summary: 3
1 0 -3 
java/util/stream/Collectors.lambda$reducing$43([Ljava/lang/Object;)Ljava/lang/Object;
PTG:
Vars:
3
_ret 1 2 
r0 1 -2 
$r1 1 2 
Fields: 1
-2 ArrayObject 2
Accesses: 0
Functions: 0
Constructors: 0

Summary: 2
-2 0 
java/util/stream/Collectors.lambda$summingInt$13([I)Ljava/lang/Integer;
PTG:
Vars:
3
_ret 1 3 
$r1 1 3 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 1
2 0 
Constructors: 0

Summary: 2
-2 0 
java/util/stream/Collectors.lambda$joining$5(Ljava/lang/StringBuilder;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;
PTG:
Vars:
3
_ret 1 -2 
r1 1 -3 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 1
2 2 -2 -3 
Constructors: 0

Summary: 3
1 0 -3 
java/util/stream/Collectors.joining(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
PTG:
Vars:
10
_ret 1 0 
r2 1 -3 
$r8 1 27 
$r5 1 12 
r1 1 -2 
$r0 1 0 
r3 1 -4 
$r7 1 22 
$r4 1 7 
$r6 1 17 
Fields: 0
Accesses: 0
Functions: 3
-1 0 
6 3 -2 -3 -4 
30 6 0 17 22 7 27 12 
Constructors: 1
30 0

Summary: 7
17 7 -2 12 22 -4 -3 
java/util/stream/Collectors.lambda$summarizingLong$62(Ljava/util/function/ToLongFunction;Ljava/util/LongSummaryStatistics;Ljava/lang/Object;)V
PTG:
Vars:
3
r2 1 -4 
r1 1 -2 
r0 1 -3 
Fields: 0
Accesses: 0
Functions: 2
1 2 -2 -4 
8 1 -3 
Constructors: 0

Summary: 5
1 -2 -4 -3 2 
java/util/stream/Collectors.lambda$summingInt$12([I[I)[I
PTG:
Vars:
3
r1 1 -3 
_ret 1 -2 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 3
1 0 -3 
java/util/stream/Collectors.groupingBy(Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;
PTG:
Vars:
15
r0 1 -4 
$r13 1 91 
r11 1 80 
r6 1 35 
$r5 1 27 
$r14 1 103 
$r9 1 41 
r2 1 13 
r7 1 -3 
r1 1 6 
r12 1 89 
_ret 1 91 
$r10 1 46 
r3 1 -2 
r4 1 24 
Fields: 0
Accesses: 0
Functions: 11
0 1 -4 
17 3 -2 6 13 
82 1 80 
70 3 -3 35 24 
7 1 -4 
40 1 -4 
41 2 41 46 
26 1 -4 
74 1 -4 
106 6 -3 35 103 24 89 91 
27 1 27 
Constructors: 1
106 91

Summary: 11
6 27 -2 13 80 -3 41 89 35 24 -4 
