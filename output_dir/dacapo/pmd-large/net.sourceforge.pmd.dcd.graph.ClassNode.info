14
net/sourceforge/pmd/dcd/graph/ClassNode.defineConstructor(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/pmd/dcd/graph/ConstructorNode;
PTG:
Vars:
12
$r6 1 1 
$r1 1 1 
_ret 1 65 
$r3 1 65 
r0 1 -1 
$r9 1 8 
r8 1 39 
r5 1 -3 
r10 1 28 
r4 1 -2 
$r7 1 39 
$r2 1 1 
Fields: 1
-1 constructorNodes 1
Accesses: 4
0 1 -1 
16 1 -1 
19 1 -1 
76 1 -1 
Functions: 7
49 3 -2 -3 39 
81 2 1 65 
20 1 1 
38 1 28 
72 5 -1 65 1 -2 -3 
13 1 8 
29 1 28 
Constructors: 2
72 65
13 8

Summary: 5
-3 39 -1 -2 28 
net/sourceforge/pmd/dcd/graph/ClassNode.getType()Ljava/lang/Class;
PTG:
Vars:
10
$r2 1 1 
$r4 1 27 
$r3 1 15 
r8 2 36 15 
_ret 2 36 15 
$r6 1 38 
$r7 1 15 
$r1 1 1 
$r5 1 30 
r0 1 -1 
Fields: 2
-1 name 27
-1 typeReference 1
Accesses: 4
0 1 -1 
26 1 -1 
11 1 -1 
46 1 -1 
Functions: 4
27 1 27 
43 3 36 38 15 
12 1 1 
30 1 30 
Constructors: 1
43 38

Summary: 2
30 -1 
net/sourceforge/pmd/dcd/graph/ClassNode.compareTo(Lnet/sourceforge/pmd/dcd/graph/ClassNode;)I
PTG:
Vars:
4
r1 1 -2 
$r2 1 5 
$r3 1 1 
r0 1 -1 
Fields: 2
-1 name 1
-2 name 5
Accesses: 2
0 1 -1 
4 1 -2 
Functions: 1
1 2 1 5 
Constructors: 0

Summary: 4
0 -1 -2 5 
net/sourceforge/pmd/dcd/graph/ClassNode.defineField(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/pmd/dcd/graph/FieldNode;
PTG:
Vars:
12
$r1 1 1 
_ret 1 65 
r8 1 39 
$r7 1 39 
r0 1 -1 
$r9 1 8 
$r3 1 65 
r4 1 -2 
$r2 1 1 
$r6 1 1 
r5 1 -3 
r10 1 28 
Fields: 1
-1 fieldNodes 1
Accesses: 4
0 1 -1 
16 1 -1 
19 1 -1 
76 1 -1 
Functions: 7
49 3 -2 -3 39 
81 2 1 65 
20 1 1 
38 1 28 
72 5 -1 65 1 -2 -3 
13 1 8 
29 1 28 
Constructors: 2
72 65
13 8

Summary: 5
-3 39 -1 -2 28 
net/sourceforge/pmd/dcd/graph/ClassNode.equals(Ljava/lang/Object;)Z
PTG:
Vars:
2
r0 1 -2 
r1 1 -1 
Fields: 0
Accesses: 1
7 1 -1 
Functions: 1
8 0 
Constructors: 0

Summary: 4
0 -1 -2 15 
net/sourceforge/pmd/dcd/graph/ClassNode.<init>(Ljava/lang/String;)V
PTG:
Vars:
2
r0 1 -1 
r1 1 -2 
Fields: 0
Accesses: 1
6 1 -1 
Functions: 1
1 1 -1 
Constructors: 1
1 -1

Summary: 2
0 -1 
net/sourceforge/pmd/dcd/graph/ClassNode.accept(Lnet/sourceforge/pmd/dcd/graph/NodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
PTG:
Vars:
4
_ret 1 -3 
r2 1 -3 
r1 1 -1 
r0 1 -2 
Fields: 0
Accesses: 0
Functions: 3
3 3 -1 -2 -3 
21 3 -1 -2 -3 
12 3 -1 -2 -3 
Constructors: 0

Summary: 2
-1 -2 
net/sourceforge/pmd/dcd/graph/ClassNode.getMethodNodes()Ljava/util/List;
PTG:
Vars:
4
_ret 2 14 1 
$r1 1 1 
$r2 2 14 1 
r0 1 -1 
Fields: 1
-1 methodNodes 1
Accesses: 2
0 1 -1 
7 1 -1 
Functions: 1
-1 0 
Constructors: 0

Summary: 1
-1 
net/sourceforge/pmd/dcd/graph/ClassNode.getName()Ljava/lang/String;
PTG:
Vars:
3
_ret 1 1 
r0 1 -1 
$r1 1 1 
Fields: 1
-1 name 1
Accesses: 1
0 1 -1 
Functions: 0
Constructors: 0

Summary: 1
-1 
net/sourceforge/pmd/dcd/graph/ClassNode.compareTo(Ljava/lang/Object;)I
PTG:
Vars:
3
$r2 1 -2 
r0 1 -1 
r1 1 -2 
Fields: 0
Accesses: 0
Functions: 1
0 2 -1 -2 
Constructors: 0

Summary: 3
0 -1 -2 
net/sourceforge/pmd/dcd/graph/ClassNode.hashCode()I
PTG:
Vars:
2
$r1 1 1 
r0 1 -1 
Fields: 1
-1 name 1
Accesses: 1
0 1 -1 
Functions: 1
1 1 1 
Constructors: 0

Summary: 1
-1 
net/sourceforge/pmd/dcd/graph/ClassNode.defineMethod(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/pmd/dcd/graph/MethodNode;
PTG:
Vars:
12
_ret 1 65 
$r9 1 8 
r8 1 39 
r5 1 -3 
r10 1 28 
$r6 1 1 
$r7 1 39 
$r2 1 1 
r4 1 -2 
$r1 1 1 
r0 1 -1 
$r3 1 65 
Fields: 1
-1 methodNodes 1
Accesses: 4
0 1 -1 
16 1 -1 
19 1 -1 
76 1 -1 
Functions: 7
49 3 -2 -3 39 
81 2 1 65 
20 1 1 
38 1 28 
72 5 -1 65 1 -2 -3 
13 1 8 
29 1 28 
Constructors: 2
72 65
13 8

Summary: 5
-3 39 -1 -2 28 
net/sourceforge/pmd/dcd/graph/ClassNode.getConstructorNodes()Ljava/util/List;
PTG:
Vars:
4
_ret 2 14 1 
r0 1 -1 
$r2 2 14 1 
$r1 1 1 
Fields: 1
-1 constructorNodes 1
Accesses: 2
0 1 -1 
7 1 -1 
Functions: 1
-1 0 
Constructors: 0

Summary: 1
-1 
net/sourceforge/pmd/dcd/graph/ClassNode.getFieldNodes()Ljava/util/List;
PTG:
Vars:
4
_ret 2 14 1 
$r2 2 14 1 
r0 1 -1 
$r1 1 1 
Fields: 1
-1 fieldNodes 1
Accesses: 2
0 1 -1 
7 1 -1 
Functions: 1
-1 0 
Constructors: 0

Summary: 1
-1 
