7
java/util/stream/ReduceOps$11ReducingSink.get()Ljava/lang/Double;
PTG:
Vars:
3
$r1 1 4 
r0 1 -1 
_ret 1 4 
Fields: 0
Accesses: 1
0 1 -1 
Functions: 1
1 0 
Constructors: 0

Summary: 1
-1 
java/util/stream/ReduceOps$11ReducingSink.combine(Ljava/util/stream/ReduceOps$11ReducingSink;)V
PTG:
Vars:
2
r0 1 -1 
r1 1 -2 
Fields: 0
Accesses: 1
1 1 -2 
Functions: 1
5 1 -1 
Constructors: 0

Summary: 3
0 -1 -2 
java/util/stream/ReduceOps$11ReducingSink.combine(Ljava/util/stream/ReduceOps$AccumulatingSink;)V
PTG:
Vars:
3
$r2 1 -2 
r1 1 -2 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
5 2 -1 -2 
Constructors: 0

Summary: 3
0 -1 -2 
java/util/stream/ReduceOps$11ReducingSink.get()Ljava/lang/Object;
PTG:
Vars:
3
$r1 1 1 
_ret 1 1 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
0 1 -1 
Constructors: 0

Summary: 1
-1 
java/util/stream/ReduceOps$11ReducingSink.<init>(DLjava/util/function/DoubleBinaryOperator;)V
PTG:
Vars:
2
r0 1 -1 
r1 1 -3 
Fields: 0
Accesses: 2
2 1 -1 
7 1 -1 
Functions: 1
11 1 -1 
Constructors: 1
11 -1

Summary: 2
-1 1 
java/util/stream/ReduceOps$11ReducingSink.begin(J)V
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 2
1 1 -1 
5 1 -1 
Functions: 0
Constructors: 0

Summary: 1
-1 
java/util/stream/ReduceOps$11ReducingSink.accept(D)V
PTG:
Vars:
2
r0 1 -1 
$r1 1 2 
Fields: 1
-1 val$operator 2
Accesses: 3
1 1 -1 
5 1 -1 
15 1 -1 
Functions: 1
2 1 2 
Constructors: 0

Summary: 1
-1 
