30
java/util/stream/AbstractPipeline.<init>(Ljava/util/stream/AbstractPipeline;I)V
PTG:
Vars:
4
r0 1 -1 
r1 1 -2 
$r3 1 73 
$r2 1 59 
Fields: 2
-1 sourceStage 73
-2 sourceStage 59
Accesses: 13
33 1 -1 
4 1 -2 
72 1 -1 
42 1 -1 
77 1 73 
47 1 -2 
81 1 -2 
54 1 -1 
23 1 -2 
87 1 -1 
58 1 -2 
28 1 -2 
62 1 -1 
Functions: 4
48 0 
1 2 -1 73 
17 0 
65 2 -1 73 
Constructors: 1
1 -1

Summary: 1
0 
java/util/stream/AbstractPipeline.wrapSink(Ljava/util/stream/Sink;)Ljava/util/stream/Sink;
PTG:
Vars:
5
r1 1 -1 
$r2 1 16 
r3 2 -2 26 
_ret 2 -2 26 
r4 2 -1 16 
Fields: 1
-1 previousStage 16
Accesses: 4
16 1 16 
7 2 -1 16 
27 2 -1 16 
15 2 -1 16 
Functions: 2
1 2 -2 26 
14 4 -1 16 -2 26 
Constructors: 0

Summary: 3
-1 0 26 
java/util/stream/AbstractPipeline.isOrdered()Z
PTG:
Vars:
2
$r1 1 0 
r0 1 -1 
Fields: 0
Accesses: 1
3 1 -1 
Functions: 1
0 1 0 
Constructors: 0

Summary: 1
-1 
java/util/stream/AbstractPipeline.wrapAndCopyInto(Ljava/util/stream/Sink;Ljava/util/Spliterator;)Ljava/util/stream/Sink;
PTG:
Vars:
7
$r4 1 9 
r1 1 -2 
r5 1 -3 
r0 1 -1 
$r2 1 3 
$r3 1 3 
_ret 1 -2 
Fields: 0
Accesses: 0
Functions: 3
1 2 -1 3 
2 1 -2 
13 3 -1 -3 9 
Constructors: 0

Summary: 6
-1 1 0 9 -3 3 
java/util/stream/AbstractPipeline.sourceSpliterator(I)Ljava/util/Spliterator;
PTG:
Vars:
18
$r11 1 3 
$r15 1 3 
$r7 1 35 
r16 3 6 48 168 
$r1 1 3 
$r6 1 3 
$r8 1 48 
_ret 3 6 48 168 
$r9 1 3 
$r4 1 35 
$r2 1 6 
$r14 1 3 
r17 3 110 242 3 
$r3 1 3 
$r10 1 3 
r18 2 110 242 
r0 1 -1 
$r13 1 139 
Fields: 5
-1 sourceStage 3
242 nextStage 242
3 sourceSpliterator 6
3 nextStage 110
3 sourceSupplier 35
Accesses: 24
32 1 3 
97 1 -1 
2 1 -1 
3 1 3 
260 1 -1 
230 2 242 110 
103 1 -1 
104 1 3 
41 1 -1 
42 1 3 
12 1 -1 
13 1 3 
237 2 242 110 
20 1 -1 
85 1 -1 
86 1 3 
215 2 242 110 
25 1 3 
57 1 -1 
122 2 242 110 
253 1 -1 
62 1 3 
222 3 242 3 110 
31 1 -1 
Functions: 9
160 7 48 242 3 35 6 168 110 
224 0 
129 2 242 110 
169 3 48 6 168 
74 0 
139 1 139 
45 1 35 
78 5 -1 3 35 6 110 
254 0 
Constructors: 0

Summary: 3
-1 168 242 
java/util/stream/AbstractPipeline.<clinit>()V
PTG:
Vars:
1
$r0 1 0 
Fields: 0
Accesses: 0
Functions: 1
0 1 0 
Constructors: 0

Summary: 0

java/util/stream/AbstractPipeline.close()V
PTG:
Vars:
6
$r3 1 16 
r4 1 19 
$r1 1 16 
$r2 1 19 
r0 1 -1 
$r5 1 16 
Fields: 2
-1 sourceStage 16
16 sourceCloseAction 19
Accesses: 9
16 1 16 
33 1 -1 
2 1 -1 
38 1 16 
7 1 -1 
25 1 -1 
26 1 16 
12 1 -1 
15 1 -1 
Functions: 1
42 1 19 
Constructors: 0

Summary: 1
-1 
java/util/stream/AbstractPipeline.opEvaluateParallel(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;Ljava/util/function/IntFunction;)Ljava/util/stream/Node;
PTG:
Vars:
5
r2 1 -2 
r1 1 -1 
r3 1 -3 
$r0 1 0 
r4 1 -4 
Fields: 0
Accesses: 0
Functions: 1
6 1 0 
Constructors: 1
6 0

Summary: 7
-1 -2 1 0 2 -3 -4 
java/util/stream/AbstractPipeline.lambda$wrapSpliterator$1(Ljava/util/Spliterator;)Ljava/util/Spliterator;
PTG:
Vars:
2
r0 1 -2 
_ret 1 -2 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 0

java/util/stream/AbstractPipeline.wrapSpliterator(Ljava/util/Spliterator;)Ljava/util/Spliterator;
PTG:
Vars:
5
r0 1 -1 
$r2 1 12 
$r3 1 21 
r1 1 -2 
_ret 1 21 
Fields: 0
Accesses: 1
0 1 -1 
Functions: 3
17 1 -1 
9 2 -1 12 
11 1 -2 
Constructors: 0

Summary: 3
-1 0 12 
java/util/stream/AbstractPipeline.lambda$opEvaluateParallelLazy$2(I)[Ljava/lang/Object;
PTG:
Vars:
3
$r0 1 1 
$r1 1 1 
_ret 1 1 
Fields: 0
Accesses: 0
Functions: 0
Constructors: 0

Summary: 0

java/util/stream/AbstractPipeline.spliterator()Ljava/util/Spliterator;
PTG:
Vars:
5
$r1 1 24 
$r2 1 103 
$r3 1 112 
_ret 1 112 
r0 1 -1 
Fields: 1
-1 sourceStage 24
Accesses: 9
0 1 -1 
48 1 -1 
19 1 -1 
68 1 -1 
23 1 -1 
40 1 -1 
58 1 -1 
76 1 -1 
30 1 -1 
Functions: 6
96 0 
84 2 -1 24 
100 3 -1 103 24 
102 2 -1 24 
108 2 -1 24 
13 0 
Constructors: 0

Summary: 2
-1 103 
java/util/stream/AbstractPipeline.evaluate(Ljava/util/stream/TerminalOp;)Ljava/lang/Object;
PTG:
Vars:
8
$r8 2 68 88 
$r2 1 85 
$r3 1 65 
r0 1 -1 
r1 1 -2 
_ret 2 68 88 
$r5 1 7 
$r6 1 11 
Fields: 0
Accesses: 2
27 1 -1 
46 1 -1 
Functions: 11
49 1 -1 
6 1 -1 
23 0 
40 0 
56 3 -1 -2 65 
10 1 -2 
58 1 -1 
59 1 -2 
76 3 -1 -2 85 
78 1 -1 
79 1 -2 
Constructors: 0

Summary: 7
-1 -2 11 0 7 65 85 
java/util/stream/AbstractPipeline.copyIntoWithCancel(Ljava/util/stream/Sink;Ljava/util/Spliterator;)V
PTG:
Vars:
4
r1 1 -2 
r2 1 -3 
r3 2 -1 13 
r0 1 -1 
Fields: 1
13 previousStage 13
Accesses: 2
2 2 -1 13 
9 2 -1 13 
Functions: 4
32 4 -1 -2 -3 13 
18 1 -3 
36 1 -2 
24 1 -2 
Constructors: 0

Summary: 6
-1 -2 1 0 13 -3 
java/util/stream/AbstractPipeline.exactOutputSizeIfKnown(Ljava/util/Spliterator;)J
PTG:
Vars:
3
$r1 1 0 
r0 1 -1 
r2 1 -2 
Fields: 0
Accesses: 0
Functions: 3
0 1 0 
3 1 -1 
13 1 -2 
Constructors: 0

Summary: 3
-1 -2 0 
java/util/stream/AbstractPipeline.sourceStageSpliterator()Ljava/util/Spliterator;
PTG:
Vars:
7
$r3 1 42 
$r6 1 102 
$r2 1 2 
$r5 1 70 
r0 1 -1 
$r4 1 2 
$r1 1 2 
Fields: 3
-1 sourceStage 2
2 sourceSpliterator 42
2 sourceSupplier 70
Accesses: 11
16 1 -1 
48 1 -1 
1 1 -1 
66 1 -1 
35 1 -1 
67 1 2 
38 1 -1 
39 1 2 
56 1 -1 
76 1 -1 
92 1 -1 
Functions: 4
80 0 
12 0 
108 1 102 
29 0 
Constructors: 1
108 102

Summary: 1
-1 
java/util/stream/AbstractPipeline.onClose(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;
PTG:
Vars:
7
r0 1 -2 
r2 1 -1 
$r5 1 6 
r4 1 12 
$r6 2 -2 27 
_ret 1 -1 
$r3 1 6 
Fields: 2
-1 sourceStage 6
6 sourceCloseAction 12
Accesses: 4
5 1 -1 
6 1 6 
13 1 -1 
30 1 6 
Functions: 2
1 1 -2 
26 2 -2 12 
Constructors: 0

Summary: 0

java/util/stream/AbstractPipeline.getStreamFlags()I
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 1
0 1 -1 
Functions: 1
1 0 
Constructors: 0

Summary: 1
-1 
java/util/stream/AbstractPipeline.getSourceShape()Ljava/util/stream/StreamShape;
PTG:
Vars:
4
r2 2 -1 13 
r0 1 -1 
_ret 1 18 
$r1 1 18 
Fields: 1
13 previousStage 13
Accesses: 2
2 2 -1 13 
9 2 -1 13 
Functions: 1
17 2 -1 13 
Constructors: 0

Summary: 2
-1 13 
java/util/stream/AbstractPipeline.<init>(Ljava/util/Spliterator;IZ)V
PTG:
Vars:
2
r1 1 -2 
r0 1 -1 
Fields: 0
Accesses: 8
16 1 -1 
51 1 -1 
6 1 -1 
25 1 -1 
41 1 -1 
11 1 -1 
29 1 -1 
46 1 -1 
Functions: 1
1 1 -1 
Constructors: 1
1 -1

Summary: 1
0 
java/util/stream/AbstractPipeline.evaluateToArrayNode(Ljava/util/function/IntFunction;)Ljava/util/stream/Node;
PTG:
Vars:
6
$r2 1 30 
r1 1 -2 
r0 1 -1 
$r9 1 74 
_ret 1 74 
$r8 1 69 
Fields: 1
-1 previousStage 30
Accesses: 6
0 1 -1 
49 1 -1 
19 1 -1 
53 1 -1 
29 1 -1 
45 1 -1 
Functions: 7
48 3 -1 -2 30 
66 4 -1 -2 69 30 
67 2 -1 30 
36 2 -1 30 
22 2 -1 30 
54 0 
13 0 
Constructors: 0

Summary: 4
-1 -2 69 58 
java/util/stream/AbstractPipeline.opEvaluateParallelLazy(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/util/Spliterator;
PTG:
Vars:
7
$r3 1 3 
$r5 1 11 
r1 1 -2 
r2 1 -3 
$r4 1 8 
r0 1 -1 
_ret 1 11 
Fields: 0
Accesses: 0
Functions: 3
-1 0 
0 4 -1 -2 -3 3 
8 1 8 
Constructors: 0

Summary: 7
-1 -2 1 0 -3 8 3 
java/util/stream/AbstractPipeline.getStreamAndOpFlags()I
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 1
0 1 -1 
Functions: 0
Constructors: 0

Summary: 1
-1 
java/util/stream/AbstractPipeline.sequential()Ljava/util/stream/BaseStream;
PTG:
Vars:
3
r0 1 -1 
$r1 1 1 
_ret 1 -1 
Fields: 1
-1 sourceStage 1
Accesses: 2
0 1 -1 
5 1 1 
Functions: 0
Constructors: 0

Summary: 0

java/util/stream/AbstractPipeline.isParallel()Z
PTG:
Vars:
2
r0 1 -1 
$r1 1 1 
Fields: 1
-1 sourceStage 1
Accesses: 2
0 1 -1 
1 1 1 
Functions: 0
Constructors: 0

Summary: 1
-1 
java/util/stream/AbstractPipeline.evaluate(Ljava/util/Spliterator;ZLjava/util/function/IntFunction;)Ljava/util/stream/Node;
PTG:
Vars:
8
r2 1 -4 
$r5 1 32 
r1 1 -2 
$r4 1 32 
$r6 1 38 
r0 1 -1 
_ret 1 38 
r3 1 26 
Fields: 0
Accesses: 0
Functions: 6
0 1 -1 
16 2 -1 -4 
17 2 -1 -2 
35 1 32 
7 3 -1 -2 -4 
28 3 -1 -2 26 
Constructors: 0

Summary: 6
-1 -2 0 2 26 -4 
java/util/stream/AbstractPipeline.<init>(Ljava/util/function/Supplier;IZ)V
PTG:
Vars:
2
r0 1 -1 
r1 1 -2 
Fields: 0
Accesses: 8
16 1 -1 
51 1 -1 
6 1 -1 
25 1 -1 
41 1 -1 
11 1 -1 
29 1 -1 
46 1 -1 
Functions: 1
1 1 -1 
Constructors: 1
1 -1

Summary: 1
0 
java/util/stream/AbstractPipeline.copyInto(Ljava/util/stream/Sink;Ljava/util/Spliterator;)V
PTG:
Vars:
4
r2 1 -1 
r4 1 -3 
r0 1 -2 
$r3 1 5 
Fields: 0
Accesses: 0
Functions: 8
32 2 -2 -3 
1 1 -2 
49 3 -1 -2 -3 
19 1 -3 
5 1 5 
38 1 -2 
8 1 -1 
25 1 -2 
Constructors: 0

Summary: 5
-1 -2 1 0 -3 
java/util/stream/AbstractPipeline.lambda$spliterator$0()Ljava/util/Spliterator;
PTG:
Vars:
3
r0 1 -1 
$r1 1 2 
_ret 1 2 
Fields: 0
Accesses: 0
Functions: 1
0 1 -1 
Constructors: 0

Summary: 1
-1 
java/util/stream/AbstractPipeline.parallel()Ljava/util/stream/BaseStream;
PTG:
Vars:
3
$r1 1 1 
_ret 1 -1 
r0 1 -1 
Fields: 1
-1 sourceStage 1
Accesses: 2
0 1 -1 
5 1 1 
Functions: 0
Constructors: 0

Summary: 0

