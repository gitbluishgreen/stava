13
java/util/stream/Nodes$DoubleArrayNode.copyInto([DI)V
PTG:
Vars:
3
$r2 1 1 
r1 1 -2 
r0 1 -1 
Fields: 1
-1 array 1
Accesses: 2
0 1 -1 
7 1 -1 
Functions: 1
11 2 1 -2 
Constructors: 0

Summary: 2
0 -1 
java/util/stream/Nodes$DoubleArrayNode.toString()Ljava/lang/String;
PTG:
Vars:
8
$r0 1 3 
$r5 1 28 
$r3 1 18 
_ret 1 32 
r1 1 -1 
$r4 1 9 
$r6 1 32 
$r2 1 9 
Fields: 1
-1 array 9
Accesses: 3
8 1 -1 
24 1 -1 
13 1 -1 
Functions: 3
17 0 
3 1 3 
25 1 9 
Constructors: 0

Summary: 2
3 -1 
java/util/stream/Nodes$DoubleArrayNode.asPrimitiveArray()Ljava/lang/Object;
PTG:
Vars:
3
_ret 1 1 
$r1 1 1 
r0 1 -1 
Fields: 0
Accesses: 0
Functions: 1
0 1 -1 
Constructors: 0

Summary: 1
-1 
java/util/stream/Nodes$DoubleArrayNode.forEach(Ljava/util/function/DoubleConsumer;)V
PTG:
Vars:
3
r1 1 -2 
r0 1 -1 
$r2 1 12 
Fields: 1
-1 array 12
Accesses: 2
3 1 -1 
11 1 -1 
Functions: 1
17 1 -2 
Constructors: 0

Summary: 3
-2 0 -1 
java/util/stream/Nodes$DoubleArrayNode.<init>([D)V
PTG:
Vars:
2
r0 1 -1 
r1 1 -2 
Fields: 0
Accesses: 2
6 1 -1 
12 1 -1 
Functions: 1
1 1 -1 
Constructors: 1
1 -1

Summary: 2
0 -1 
java/util/stream/Nodes$DoubleArrayNode.<init>(J)V
PTG:
Vars:
2
r0 1 -1 
$r1 1 25 
Fields: 0
Accesses: 2
32 1 -1 
27 1 -1 
Functions: 2
1 1 -1 
18 0 
Constructors: 1
1 -1

Summary: 1
-1 
java/util/stream/Nodes$DoubleArrayNode.asPrimitiveArray()[D
PTG:
Vars:
5
$r2 1 1 
_ret 1 25 
$r3 1 25 
$r1 1 1 
r0 1 -1 
Fields: 1
-1 array 1
Accesses: 5
0 1 -1 
17 1 -1 
5 1 -1 
21 1 -1 
12 1 -1 
Functions: 1
22 1 1 
Constructors: 0

Summary: 1
-1 
java/util/stream/Nodes$DoubleArrayNode.spliterator()Ljava/util/Spliterator$OfDouble;
PTG:
Vars:
4
$r1 1 1 
_ret 1 9 
r0 1 -1 
$r2 1 9 
Fields: 1
-1 array 1
Accesses: 2
0 1 -1 
5 1 -1 
Functions: 1
6 1 1 
Constructors: 0

Summary: 1
-1 
java/util/stream/Nodes$DoubleArrayNode.forEach(Ljava/lang/Object;)V
PTG:
Vars:
3
r0 1 -1 
r1 1 -2 
$r2 1 -2 
Fields: 0
Accesses: 0
Functions: 1
5 2 -1 -2 
Constructors: 0

Summary: 3
-2 0 -1 
java/util/stream/Nodes$DoubleArrayNode.count()J
PTG:
Vars:
1
r0 1 -1 
Fields: 0
Accesses: 1
0 1 -1 
Functions: 0
Constructors: 0

Summary: 1
-1 
java/util/stream/Nodes$DoubleArrayNode.spliterator()Ljava/util/Spliterator;
PTG:
Vars:
3
r0 1 -1 
_ret 1 1 
$r1 1 1 
Fields: 0
Accesses: 0
Functions: 1
0 1 -1 
Constructors: 0

Summary: 1
-1 
java/util/stream/Nodes$DoubleArrayNode.copyInto(Ljava/lang/Object;I)V
PTG:
Vars:
3
r0 1 -1 
r1 1 -2 
$r2 1 -2 
Fields: 0
Accesses: 0
Functions: 1
6 2 -1 -2 
Constructors: 0

Summary: 3
-2 0 -1 
java/util/stream/Nodes$DoubleArrayNode.spliterator()Ljava/util/Spliterator$OfPrimitive;
PTG:
Vars:
3
_ret 1 1 
r0 1 -1 
$r1 1 1 
Fields: 0
Accesses: 0
Functions: 1
0 1 -1 
Constructors: 0

Summary: 1
-1 
